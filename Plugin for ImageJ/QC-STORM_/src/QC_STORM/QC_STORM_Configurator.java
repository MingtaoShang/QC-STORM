/*
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU LESSER GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

//package QC_STORM;


import ij.io.OpenDialog;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;
import javax.swing.JFileChooser;



public class QC_STORM_Configurator extends javax.swing.JFrame {
    
    volatile public int PluginStatus; // 0: open, 1: process, 2: closed
    public QC_STORM_Parameters.LocalizationPara LocPara;

    final String LocParafileName = "QC_STORM\\QC_STORM_IJ_para.properties";

    volatile public String ResultsFilePath = "D:\\";
    
    public String RerendLocDataPath=null;
    
    public QC_STORM_ fa_QC_STORM_;
    
    public int DriftCorrEnableI=0;
    public int DriftCorrGroupFrameNum=800;
    
    public float ZDepthGapF=50;
    public int FramePerDepth=100;
    
    /**
     * Creates new form QC_STORM_Configurator
     */
    public QC_STORM_Configurator() {
        initComponents();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QC-STORM");
        
        LocPara = new QC_STORM_Parameters.LocalizationPara();
        PluginStatus = 0;
        this.addWindowListener(new MyListener());
        
        try {
            LoadPropertyFile(GetParaFileSavePath());
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
           
        }
        
    }
    public QC_STORM_Configurator(QC_STORM_ fa_OnlineSMLM) {
        initComponents();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QC-STORM");
        
        fa_QC_STORM_ = fa_OnlineSMLM;
        
        LocPara = new QC_STORM_Parameters.LocalizationPara();
        PluginStatus = 0;
        this.addWindowListener(new MyListener());
        
        try {
            LoadPropertyFile(GetParaFileSavePath());
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
           
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator6 = new javax.swing.JSeparator();
        jTextField_ParaFile1 = new javax.swing.JTextField();
        jButton_Start2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox_RegionSize = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextField_RawPixelSize = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_RenderPixelSize = new javax.swing.JTextField();
        jTextField_SNR_th = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jComboBox_LocType = new javax.swing.JComboBox();
        jCheckBox_Stat_ConsecutiveFit = new javax.swing.JCheckBox();
        jButton_LoadParaFile = new javax.swing.JButton();
        jTextField_ParaFile = new javax.swing.JTextField();
        jTextField_ResultPath = new javax.swing.JTextField();
        jButton_LoadResultPath = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jTextField_ConsecFilterRadius = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_MaxZDepth = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_p2 = new javax.swing.JTextField();
        jTextField_p3 = new javax.swing.JTextField();
        jTextField_p4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField_p0 = new javax.swing.JTextField();
        jTextField_p1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField_MeanDistance = new javax.swing.JTextField();
        jTextField_DistanceTh = new javax.swing.JTextField();
        jTextField_RotateType = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextField_MinZDepth = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox_Stat_TotalPhoton = new javax.swing.JCheckBox();
        jCheckBox_Stat_LocPrec = new javax.swing.JCheckBox();
        jCheckBox_Stat_PSFWidth = new javax.swing.JCheckBox();
        jCheckBox_Stat_SNR = new javax.swing.JCheckBox();
        jCheckBox_Stat_TotalPhotonVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_LocPrecVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_OntimeVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_SNRVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_PSFWidthVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_LocDensityVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_BackgroundVary = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jCheckBox_Stat_NyqResolutionVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_SpaResolutionVary = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        jTextField_StructureSize2D = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jCheckBox_Stat_OntimeEn = new javax.swing.JCheckBox();
        jCheckBox_Stat_SpaResolutionEn = new javax.swing.JCheckBox();
        jCheckBox_Stat_DimensionFDVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_LocDensityFDVary = new javax.swing.JCheckBox();
        jLabel28 = new javax.swing.JLabel();
        jTextField_ImagePerGroup = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField_Offset = new javax.swing.JTextField();
        jTextField_Kadc = new javax.swing.JTextField();
        jTextField_QE = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField_LocDataPath = new javax.swing.JTextField();
        jButton_LoadLocData = new javax.swing.JButton();
        jCheckBox_ShiftCorrection = new javax.swing.JCheckBox();
        jButton_Rerend = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jTextField_DriftCorrGroupFrameNum = new javax.swing.JTextField();
        jButton_Start = new javax.swing.JButton();

        jButton_Start2.setText("Rerendering");
        jButton_Start2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Start2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Fitting ROI size (pixels):");

        jComboBox_RegionSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "7", "9", "11", "13", "15", "17" }));
        jComboBox_RegionSize.setSelectedIndex(1);
        jComboBox_RegionSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_RegionSizeActionPerformed(evt);
            }
        });

        jLabel2.setText("Raw image pixel size (nm):");

        jTextField_RawPixelSize.setText("100");

        jLabel3.setText("Rendering pixel size (nm):");

        jTextField_RenderPixelSize.setText("10");
        jTextField_RenderPixelSize.setToolTipText("Pixel Zoom from raw image to SR image");
        jTextField_RenderPixelSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_RenderPixelSizeActionPerformed(evt);
            }
        });

        jTextField_SNR_th.setText("5");

        jLabel20.setText("Rendering SNR threshold:");

        jLabel21.setText("Fitting type:");

        jComboBox_LocType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gaussian 2D", "Astigmatism 3D" }));
        jComboBox_LocType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_LocTypeActionPerformed(evt);
            }
        });

        jCheckBox_Stat_ConsecutiveFit.setText("Consecutive fitting");

        jButton_LoadParaFile.setText("Load configuration file");
        jButton_LoadParaFile.setActionCommand("");
        jButton_LoadParaFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadParaFileActionPerformed(evt);
            }
        });

        jTextField_ResultPath.setText("D:\\");

            jButton_LoadResultPath.setText("Change result save path");
            jButton_LoadResultPath.setActionCommand("");
            jButton_LoadResultPath.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_LoadResultPathActionPerformed(evt);
                }
            });

            jLabel29.setText("Consecutive fitting/filterimg radius (nm):");

            jTextField_ConsecFilterRadius.setText("80");

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_ConsecutiveFit)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField_ParaFile, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_ResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(47, 47, 47)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton_LoadParaFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_LoadResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField_ConsecFilterRadius, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox_LocType, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_SNR_th, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTextField_RawPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField_RenderPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBox_RegionSize, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addComponent(jLabel29))
                    .addContainerGap(115, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jComboBox_RegionSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(9, 9, 9)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField_RawPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextField_RenderPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_SNR_th, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBox_LocType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox_Stat_ConsecutiveFit)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_ConsecFilterRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton_LoadParaFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_ParaFile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(15, 15, 15)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton_LoadResultPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_ResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(122, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("Imaging basics", jPanel1);

            jLabel4.setText("Z depth range (nm):");

            jTextField_MaxZDepth.setText("500");
            jTextField_MaxZDepth.setToolTipText("Max Z depth");

            jLabel10.setText("Z depth calibration curve by 4 order polynomial:");

            jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel5.setText("p4:");

            jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel6.setText("p3:");

            jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel7.setText("p2:");

            jTextField_p2.setText("13.08");

            jTextField_p3.setText("-4.2170");

            jTextField_p4.setText("0");

            jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel8.setText("p1:");

            jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel9.setText("p0:");

            jTextField_p0.setText("0");

            jTextField_p1.setText("-278.79");

            jLabel22.setText("Double-Helix 3D special：");

            jLabel23.setText("Mean distance (pixel):");

            jTextField_MeanDistance.setText("10.1");

            jTextField_DistanceTh.setText("0.9");

            jTextField_RotateType.setText("0");
            jTextField_RotateType.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_RotateTypeActionPerformed(evt);
                }
            });

            jLabel25.setText("Rotate type:");

            jLabel24.setText("Distance threshold (pixel):");

            jTextField_MinZDepth.setText("-500");
            jTextField_MinZDepth.setToolTipText("Min Z depth");

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(47, 47, 47)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField_MeanDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField_DistanceTh, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(47, 47, 47)
                                    .addComponent(jTextField_RotateType, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(43, 43, 43)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(194, 194, 194))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(35, 35, 35)
                                    .addComponent(jTextField_MinZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField_MaxZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField_p4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField_p3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField_p2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_p1, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(17, 17, 17)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_p0)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)))
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTextField_MaxZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_MinZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(17, 17, 17)
                    .addComponent(jLabel10)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_p4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(26, 26, 26)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(jTextField_MeanDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(jTextField_DistanceTh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25)
                        .addComponent(jTextField_RotateType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 158, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("3D inf", jPanel2);

            jCheckBox_Stat_TotalPhoton.setText("Total photon");

            jCheckBox_Stat_LocPrec.setText("Localization precision");

            jCheckBox_Stat_PSFWidth.setSelected(true);
            jCheckBox_Stat_PSFWidth.setText("PSF width");

            jCheckBox_Stat_SNR.setSelected(true);
            jCheckBox_Stat_SNR.setText("SNR");

            jCheckBox_Stat_TotalPhotonVary.setText("Total photon");

            jCheckBox_Stat_LocPrecVary.setSelected(true);
            jCheckBox_Stat_LocPrecVary.setText("Localization precision");

            jCheckBox_Stat_OntimeVary.setText("Ontime");
            jCheckBox_Stat_OntimeVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_OntimeVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_SNRVary.setSelected(true);
            jCheckBox_Stat_SNRVary.setText("SNR");

            jCheckBox_Stat_PSFWidthVary.setSelected(true);
            jCheckBox_Stat_PSFWidthVary.setText("PSF width");

            jCheckBox_Stat_LocDensityVary.setSelected(true);
            jCheckBox_Stat_LocDensityVary.setText("Localization density 2D");

            jCheckBox_Stat_BackgroundVary.setText("Background");

            jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
            jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel11.setText("Histogram:");

            jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
            jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel12.setText("Time variation curve:");

            jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
            jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel16.setText("Convolved spatial resolution variation curve:");

            jCheckBox_Stat_NyqResolutionVary.setText("Nyquist resolution");

            jCheckBox_Stat_SpaResolutionVary.setSelected(true);
            jCheckBox_Stat_SpaResolutionVary.setText("Spatial resolution");

            jLabel26.setText("Structure size 2D (nm):");

            jTextField_StructureSize2D.setText("40");

            jLabel27.setText("Functions enable:");

            jCheckBox_Stat_OntimeEn.setSelected(true);
            jCheckBox_Stat_OntimeEn.setText("Ontime");
            jCheckBox_Stat_OntimeEn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_OntimeEnActionPerformed(evt);
                }
            });

            jCheckBox_Stat_SpaResolutionEn.setSelected(true);
            jCheckBox_Stat_SpaResolutionEn.setText("Spatial resolution");

            jCheckBox_Stat_DimensionFDVary.setText("Dimension FD");

            jCheckBox_Stat_LocDensityFDVary.setText("Localization density FD");

            jLabel28.setText("Images per group:");

            jTextField_ImagePerGroup.setText("50");

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel27)
                            .addGap(18, 18, 18)
                            .addComponent(jCheckBox_Stat_OntimeEn)
                            .addGap(18, 18, 18)
                            .addComponent(jCheckBox_Stat_SpaResolutionEn))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox_Stat_BackgroundVary)
                                .addComponent(jCheckBox_Stat_PSFWidthVary)
                                .addComponent(jCheckBox_Stat_OntimeVary)
                                .addComponent(jCheckBox_Stat_TotalPhotonVary))
                            .addGap(47, 47, 47)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox_Stat_LocPrecVary)
                                .addComponent(jCheckBox_Stat_SNRVary)
                                .addComponent(jCheckBox_Stat_LocDensityVary)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jCheckBox_Stat_TotalPhoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox_Stat_SNR, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(44, 44, 44)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox_Stat_PSFWidth)
                                .addComponent(jCheckBox_Stat_LocPrec, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26)
                                    .addComponent(jCheckBox_Stat_SpaResolutionVary)
                                    .addComponent(jCheckBox_Stat_DimensionFDVary)
                                    .addComponent(jLabel28))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox_Stat_LocDensityFDVary)
                                            .addComponent(jCheckBox_Stat_NyqResolutionVary)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(61, 61, 61)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_ImagePerGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_StructureSize2D, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addContainerGap(151, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox_Stat_OntimeEn)
                        .addComponent(jCheckBox_Stat_SpaResolutionEn))
                    .addGap(6, 6, 6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_StructureSize2D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_ImagePerGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addComponent(jLabel11)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_TotalPhoton)
                        .addComponent(jCheckBox_Stat_LocPrec))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_SNR)
                        .addComponent(jCheckBox_Stat_PSFWidth))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel12)
                    .addGap(9, 9, 9)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_TotalPhotonVary)
                        .addComponent(jCheckBox_Stat_LocPrecVary))
                    .addGap(3, 3, 3)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_OntimeVary)
                        .addComponent(jCheckBox_Stat_SNRVary))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_PSFWidthVary)
                        .addComponent(jCheckBox_Stat_LocDensityVary))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox_Stat_BackgroundVary)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel16)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_SpaResolutionVary)
                        .addComponent(jCheckBox_Stat_NyqResolutionVary))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_DimensionFDVary)
                        .addComponent(jCheckBox_Stat_LocDensityFDVary))
                    .addContainerGap(54, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("Statistical disp", jPanel3);

            jLabel13.setText("QE:");

            jLabel14.setText("Kadc (e-/DN):");

            jLabel15.setText("Offset (DN):");

            jTextField_Offset.setText("100");

            jTextField_Kadc.setText("0.45");

            jTextField_QE.setText("0.72");

            javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
            jPanel5.setLayout(jPanel5Layout);
            jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(54, 54, 54)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_Kadc)
                        .addComponent(jTextField_QE, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                        .addComponent(jTextField_Offset))
                    .addGap(265, 265, 265))
            );
            jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel13)
                        .addComponent(jTextField_QE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_Kadc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_Offset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15))
                    .addContainerGap(288, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("Camera inf", jPanel5);

            jButton_LoadLocData.setText("Load binary localization result file");
            jButton_LoadLocData.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_LoadLocDataActionPerformed(evt);
                }
            });

            jCheckBox_ShiftCorrection.setText("Shift correction by cross correlation");

            jButton_Rerend.setText("Rerendering");
            jButton_Rerend.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_RerendActionPerformed(evt);
                }
            });

            jLabel17.setText("Drift corr group frame number:");

            jTextField_DriftCorrGroupFrameNum.setText("800");

            javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
            jPanel4.setLayout(jPanel4Layout);
            jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(jButton_Rerend, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(26, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField_DriftCorrGroupFrameNum, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jTextField_LocDataPath, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(jButton_LoadLocData))
                        .addComponent(jCheckBox_ShiftCorrection, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18))
            );
            jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_LocDataPath, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_LoadLocData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(14, 14, 14)
                    .addComponent(jCheckBox_ShiftCorrection)
                    .addGap(10, 10, 10)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(jTextField_DriftCorrGroupFrameNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jButton_Rerend, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(238, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("Post processing", jPanel4);

            jButton_Start.setText("Start localization");
            jButton_Start.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_StartActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(113, 113, 113)
                            .addComponent(jButton_Start, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(20, 20, 20))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton_Start, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents


    private void jButton_StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_StartActionPerformed
        int ErrorCodeI=0;
 //       if(ErrorCodeI!=0)return;
       

        GetLocalizationPara();

        
        fa_QC_STORM_.StartLocalization();
        
        // start to localize
        PluginStatus = 1;                            

        try {
            SavePropertyFile(GetParaFileSavePath());
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
            
        }       
    }//GEN-LAST:event_jButton_StartActionPerformed

    private void jButton_LoadParaFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadParaFileActionPerformed
                
        OpenDialog dlgDialog=new OpenDialog("open para file");

        String filePath=dlgDialog.getPath();
        jTextField_ParaFile.setText(filePath);
        try {
            LoadPropertyFile(filePath);
            
        }catch (Exception ex) {
            
        }        
        
    }//GEN-LAST:event_jButton_LoadParaFileActionPerformed

    private void jButton_LoadResultPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadResultPathActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();  
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
        jf.showDialog(null,null);  
        File fi = jf.getSelectedFile();  
        ResultsFilePath = fi.getAbsolutePath();  
        
        char EndMarkC = '\\';
        if(ResultsFilePath.charAt(ResultsFilePath.length()-1)!=EndMarkC)
        {
            ResultsFilePath+=EndMarkC;
        }
        
        jTextField_ResultPath.setText(ResultsFilePath);
                
        
    }//GEN-LAST:event_jButton_LoadResultPathActionPerformed

    private void jButton_LoadLocDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadLocDataActionPerformed
                
        OpenDialog dlgDialog=new OpenDialog("open localization result file");

        String filePath = dlgDialog.getPath();
        jTextField_LocDataPath.setText(filePath);
        
        RerendLocDataPath = filePath;
        

    }//GEN-LAST:event_jButton_LoadLocDataActionPerformed

    private void jButton_RerendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RerendActionPerformed
       
        if(RerendLocDataPath==null)return;
        if(!RerendLocDataPath.endsWith(".txt"))return;
        
        DriftCorrEnableI=jCheckBox_ShiftCorrection.isSelected()? 1 : 0;
        DriftCorrGroupFrameNum=Integer.parseInt(jTextField_DriftCorrGroupFrameNum.getText());
        
        fa_QC_STORM_.StartRerend();     
        
        try {
            SavePropertyFile(GetParaFileSavePath());
        }catch (Exception ex) {
            
        }
    }//GEN-LAST:event_jButton_RerendActionPerformed

    private void jButton_Start2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Start2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Start2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       

        
    }//GEN-LAST:event_formWindowClosing

    private void jTextField_RenderPixelSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RenderPixelSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RenderPixelSizeActionPerformed

    private void jComboBox_LocTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_LocTypeActionPerformed
        // TODO add your handling code here:
//        GetLocalizationPara();
        
    }//GEN-LAST:event_jComboBox_LocTypeActionPerformed

    private void jTextField_RotateTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RotateTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RotateTypeActionPerformed

    private void jComboBox_RegionSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_RegionSizeActionPerformed
        // TODO add your handling code here:
 //       GetLocalizationPara();
    }//GEN-LAST:event_jComboBox_RegionSizeActionPerformed

    private void jCheckBox_Stat_OntimeVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_OntimeVaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_Stat_OntimeVaryActionPerformed

    private void jCheckBox_Stat_OntimeEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_OntimeEnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_Stat_OntimeEnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QC_STORM_Configurator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_LoadLocData;
    private javax.swing.JButton jButton_LoadParaFile;
    private javax.swing.JButton jButton_LoadResultPath;
    private javax.swing.JButton jButton_Rerend;
    private javax.swing.JButton jButton_Start;
    private javax.swing.JButton jButton_Start2;
    private javax.swing.JCheckBox jCheckBox_ShiftCorrection;
    private javax.swing.JCheckBox jCheckBox_Stat_BackgroundVary;
    private javax.swing.JCheckBox jCheckBox_Stat_ConsecutiveFit;
    private javax.swing.JCheckBox jCheckBox_Stat_DimensionFDVary;
    private javax.swing.JCheckBox jCheckBox_Stat_LocDensityFDVary;
    private javax.swing.JCheckBox jCheckBox_Stat_LocDensityVary;
    private javax.swing.JCheckBox jCheckBox_Stat_LocPrec;
    private javax.swing.JCheckBox jCheckBox_Stat_LocPrecVary;
    private javax.swing.JCheckBox jCheckBox_Stat_NyqResolutionVary;
    private javax.swing.JCheckBox jCheckBox_Stat_OntimeEn;
    private javax.swing.JCheckBox jCheckBox_Stat_OntimeVary;
    private javax.swing.JCheckBox jCheckBox_Stat_PSFWidth;
    private javax.swing.JCheckBox jCheckBox_Stat_PSFWidthVary;
    private javax.swing.JCheckBox jCheckBox_Stat_SNR;
    private javax.swing.JCheckBox jCheckBox_Stat_SNRVary;
    private javax.swing.JCheckBox jCheckBox_Stat_SpaResolutionEn;
    private javax.swing.JCheckBox jCheckBox_Stat_SpaResolutionVary;
    private javax.swing.JCheckBox jCheckBox_Stat_TotalPhoton;
    private javax.swing.JCheckBox jCheckBox_Stat_TotalPhotonVary;
    private javax.swing.JComboBox jComboBox_LocType;
    private javax.swing.JComboBox jComboBox_RegionSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField_ConsecFilterRadius;
    private javax.swing.JTextField jTextField_DistanceTh;
    private javax.swing.JTextField jTextField_DriftCorrGroupFrameNum;
    private javax.swing.JTextField jTextField_ImagePerGroup;
    private javax.swing.JTextField jTextField_Kadc;
    private javax.swing.JTextField jTextField_LocDataPath;
    private javax.swing.JTextField jTextField_MaxZDepth;
    private javax.swing.JTextField jTextField_MeanDistance;
    private javax.swing.JTextField jTextField_MinZDepth;
    private javax.swing.JTextField jTextField_Offset;
    private javax.swing.JTextField jTextField_ParaFile;
    private javax.swing.JTextField jTextField_ParaFile1;
    private javax.swing.JTextField jTextField_QE;
    private javax.swing.JTextField jTextField_RawPixelSize;
    private javax.swing.JTextField jTextField_RenderPixelSize;
    private javax.swing.JTextField jTextField_ResultPath;
    private javax.swing.JTextField jTextField_RotateType;
    private javax.swing.JTextField jTextField_SNR_th;
    private javax.swing.JTextField jTextField_StructureSize2D;
    private javax.swing.JTextField jTextField_p0;
    private javax.swing.JTextField jTextField_p1;
    private javax.swing.JTextField jTextField_p2;
    private javax.swing.JTextField jTextField_p3;
    private javax.swing.JTextField jTextField_p4;
    // End of variables declaration//GEN-END:variables
    

    
    public QC_STORM_Parameters.LocalizationPara GetLocalizationPara()
    {
        LocPara.KadcF   	= Float.parseFloat(jTextField_Kadc.getText());
        LocPara.OffsetF 	= Float.parseFloat(jTextField_Offset.getText());
        LocPara.QEF 		= Float.parseFloat(jTextField_QE.getText());
        LocPara.RegionSizeI = Integer.parseInt((String)jComboBox_RegionSize.getSelectedItem());

    	LocPara.RawImgPixelSize = Float.parseFloat(jTextField_RawPixelSize.getText());
    	LocPara.RenderingPixelSize = Float.parseFloat(jTextField_RenderPixelSize.getText());
        LocPara.RenderingPixelZoom = LocPara.RawImgPixelSize/LocPara.RenderingPixelSize;
            
        LocPara.LocTypeI=jComboBox_LocType.getSelectedIndex();
        LocPara.ConsecutiveFitEnI = jCheckBox_Stat_ConsecutiveFit.isSelected()? 1 : 0;
        LocPara.ConsecFilterRadius = Float.parseFloat(jTextField_ConsecFilterRadius.getText());
        
        LocPara.MinZDepthF = Float.parseFloat(jTextField_MinZDepth.getText());
    	LocPara.MaxZDepthF = Float.parseFloat(jTextField_MaxZDepth.getText());
        

        
    	LocPara.p4F = Float.parseFloat(jTextField_p4.getText());
    	LocPara.p3F = Float.parseFloat(jTextField_p3.getText());
    	LocPara.p2F = Float.parseFloat(jTextField_p2.getText());
    	LocPara.p1F = Float.parseFloat(jTextField_p1.getText());
    	LocPara.p0F = Float.parseFloat(jTextField_p0.getText());
        
        //
        LocPara.MeanDistance = Float.parseFloat(jTextField_MeanDistance.getText());
        LocPara.DistanceTh = Float.parseFloat(jTextField_DistanceTh.getText());
        LocPara.RotateType = Integer.parseInt(jTextField_RotateType.getText());

        //
    	LocPara.SNR_thF = Float.parseFloat(jTextField_SNR_th.getText());
        
        // spatial resolution
        LocPara.StructureSize2D = Float.parseFloat(jTextField_StructureSize2D.getText());
        LocPara.ImagePerGroup = Integer.parseInt(jTextField_ImagePerGroup.getText());

        
        // statastic information display enable
        LocPara.StatDispSelI = GetStasticalInfDispEn();
        LocPara.OnTimeEn = jCheckBox_Stat_OntimeEn.isSelected() ? 1 : 0;
        LocPara.SpatialResolutionEn = jCheckBox_Stat_SpaResolutionEn.isSelected() ? 1 : 0;
        
        
        // save file path
        ResultsFilePath = jTextField_ResultPath.getText();  
        
        return LocPara;
    }
    
    void SendLocalizationPara()
    {
        GetLocalizationPara();
        
        QC_STORM_.lm_SetLocPara(LocPara.KadcF,LocPara.OffsetF,LocPara.QEF,LocPara.RegionSizeI,LocPara.LocTypeI, LocPara.ConsecutiveFitEnI, LocPara.ConsecFilterRadius, LocPara.RawImgPixelSize,LocPara.RenderingPixelZoom,LocPara.SNR_thF);
        QC_STORM_.lm_SetLocPara3D(LocPara.MinZDepthF, LocPara.MaxZDepthF,LocPara.p4F,LocPara.p3F,LocPara.p2F,LocPara.p1F,LocPara.p0F, LocPara.MeanDistance,LocPara.DistanceTh, LocPara.RotateType);
       
        QC_STORM_. lm_SetStatInfSelection(LocPara.StatDispSelI, LocPara.OnTimeEn, LocPara.SpatialResolutionEn);            
        QC_STORM_.lm_SetSpatialResolutionInf(LocPara.ImagePerGroup, LocPara.StructureSize2D);
                     
    }
    
    public int GetStasticalInfDispEn()
    {
        int InfDispSel = 0;

        // histgram
        if(jCheckBox_Stat_TotalPhoton.isSelected()) 	 InfDispSel |= 0x01;
        if(jCheckBox_Stat_LocPrec.isSelected())     	 InfDispSel |= 0x01<<1;
        if(jCheckBox_Stat_SNR.isSelected())         	 InfDispSel |= 0x01<<2;
        if(jCheckBox_Stat_PSFWidth.isSelected())    	 InfDispSel |= 0x01<<3;
        // time variation
        if(jCheckBox_Stat_TotalPhotonVary.isSelected())  InfDispSel |= 0x01<<4;
        if(jCheckBox_Stat_LocPrecVary.isSelected())      InfDispSel |= 0x01<<5;
        if(jCheckBox_Stat_OntimeVary.isSelected())       InfDispSel |= 0x01<<6;
        if(jCheckBox_Stat_SNRVary.isSelected())          InfDispSel |= 0x01<<7;   

        if(jCheckBox_Stat_PSFWidthVary.isSelected())     InfDispSel |= 0x01<<8;
        if(jCheckBox_Stat_LocDensityVary.isSelected())    InfDispSel |= 0x01<<9;
        if(jCheckBox_Stat_BackgroundVary.isSelected())   InfDispSel |= 0x01<<10;   
        
        // spatial resolution
        if(jCheckBox_Stat_SpaResolutionVary.isSelected())InfDispSel |= 0x01<<11;  
        if(jCheckBox_Stat_NyqResolutionVary.isSelected())InfDispSel |= 0x01<<12;
        if(jCheckBox_Stat_DimensionFDVary.isSelected())InfDispSel |= 0x01<<13;    
        if(jCheckBox_Stat_LocDensityFDVary.isSelected())InfDispSel |= 0x01<<14;
         
        
        return InfDispSel;
    }

    public void LoadPropertyFile(String FilePath) throws FileNotFoundException, IOException
    {
  
        File Parafile = new File(FilePath);
        File Parafiledir = new File(Parafile.getParent());


        if (Parafiledir.exists())
        {
           
        }else
        {
             Parafiledir.mkdirs();
        }

        if (Parafile.exists())
        {
            
        }else
        {
             Parafile.createNewFile();
        }
        

        // load property file
        
		Properties pps = new Properties();

		InputStream in = new FileInputStream(FilePath);
		
        
		pps.load(in);

		// with default value
       	jTextField_Kadc.setText(pps.getProperty("Kadc", Float.toString(LocPara.KadcF)));
		jTextField_Offset.setText(pps.getProperty("Offset", Float.toString(LocPara.OffsetF)));
		jTextField_QE.setText(pps.getProperty("QE", Float.toString(LocPara.QEF)));

		jComboBox_RegionSize.setSelectedItem(pps.getProperty("RegionSize", Integer.toString(LocPara.RegionSizeI)));

		jTextField_RawPixelSize.setText(pps.getProperty("RawPixelSize", Float.toString(LocPara.RawImgPixelSize)));
		jTextField_RenderPixelSize.setText(pps.getProperty("RenderingPixelSize", Float.toString(LocPara.RenderingPixelSize)));

        jComboBox_LocType.setSelectedIndex(Integer.parseInt(pps.getProperty("LocType", Integer.toString(LocPara.LocTypeI))));

        jCheckBox_Stat_ConsecutiveFit.setSelected(Boolean.parseBoolean(pps.getProperty("ConsecutiveFitEnable", "true")));
        jTextField_ConsecFilterRadius.setText(pps.getProperty("ConsecFilterRadius", Float.toString(80.0f)));

        
        jTextField_MinZDepth.setText(pps.getProperty("MinZDepth", Float.toString(LocPara.MinZDepthF)));
        jTextField_MaxZDepth.setText(pps.getProperty("MaxZDepth", Float.toString(LocPara.MaxZDepthF)));

		jTextField_p4.setText(pps.getProperty("p4", Float.toString(LocPara.p4F)));
		jTextField_p3.setText(pps.getProperty("p3", Float.toString(LocPara.p3F)));
		jTextField_p2.setText(pps.getProperty("p2", Float.toString(LocPara.p2F)));
		jTextField_p1.setText(pps.getProperty("p1", Float.toString(LocPara.p1F)));
		jTextField_p0.setText(pps.getProperty("p0", Float.toString(LocPara.p0F)));
        
        //
        jTextField_MeanDistance.setText(pps.getProperty("MeanDistance", Float.toString(LocPara.MeanDistance)));
        jTextField_DistanceTh.setText(pps.getProperty("DistanceTh", Float.toString(LocPara.DistanceTh)));
        jTextField_RotateType.setText(pps.getProperty("RotateType", Integer.toString(LocPara.RotateType)));

        //
		jTextField_SNR_th.setText(pps.getProperty("SNR_thF", Float.toString(LocPara.SNR_thF)));
        
        jTextField_StructureSize2D.setText(pps.getProperty("StructureSize2D", Float.toString(40)));
        jTextField_ImagePerGroup.setText(pps.getProperty("ImagePerGroup", Integer.toString(50)));
        
        // statastic information display enable

        jCheckBox_Stat_TotalPhoton.setSelected(Boolean.parseBoolean(pps.getProperty("TPhotonEnable",Boolean.toString(false))));
        jCheckBox_Stat_LocPrec.setSelected(Boolean.parseBoolean(pps.getProperty("LocPrecEnable", Boolean.toString(false))));
        jCheckBox_Stat_SNR.setSelected(Boolean.parseBoolean(pps.getProperty("SNREnable", Boolean.toString(false))));
        jCheckBox_Stat_PSFWidth.setSelected(Boolean.parseBoolean(pps.getProperty("PSFEnable", Boolean.toString(false))));
        //
        jCheckBox_Stat_TotalPhotonVary.setSelected(Boolean.parseBoolean(pps.getProperty("TPhotonVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_LocPrecVary.setSelected(Boolean.parseBoolean(pps.getProperty("LocPrecVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_OntimeVary.setSelected(Boolean.parseBoolean(pps.getProperty("OntimeVariationEnable", Boolean.toString(false))));
        jCheckBox_Stat_SNRVary.setSelected(Boolean.parseBoolean(pps.getProperty("SNRVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_PSFWidthVary.setSelected(Boolean.parseBoolean(pps.getProperty("PSFWidthVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_LocDensityVary.setSelected(Boolean.parseBoolean(pps.getProperty("ActivationDensityVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_BackgroundVary.setSelected(Boolean.parseBoolean(pps.getProperty("BackgroundVariationEnable", Boolean.toString(false))));
        //
        jCheckBox_Stat_SpaResolutionVary.setSelected(Boolean.parseBoolean(pps.getProperty("SpaResolutionVaryEnable", Boolean.toString(false))));
        jCheckBox_Stat_NyqResolutionVary.setSelected(Boolean.parseBoolean(pps.getProperty("NyqResolutionVaryEnable", Boolean.toString(false))));

        jCheckBox_Stat_DimensionFDVary.setSelected(Boolean.parseBoolean(pps.getProperty("DimensionFDVaryEnable", Boolean.toString(false))));
        jCheckBox_Stat_LocDensityFDVary.setSelected(Boolean.parseBoolean(pps.getProperty("LocDensityFDVary", Boolean.toString(false))));
        
                
        jCheckBox_Stat_OntimeEn.setSelected(Boolean.parseBoolean(pps.getProperty("OnTimeCalcEnable", Boolean.toString(true))));
        jCheckBox_Stat_SpaResolutionEn.setSelected(Boolean.parseBoolean(pps.getProperty("SpaResolutionCalcEnable", Boolean.toString(true))));

    
       //
        jCheckBox_ShiftCorrection.setSelected(Boolean.parseBoolean(pps.getProperty("DriftCorrectionEn", Boolean.toString(true))));
        jTextField_DriftCorrGroupFrameNum.setText(pps.getProperty("DriftCorrGroupFrameNum", Integer.toString(800)));

        //
        ResultsFilePath=pps.getProperty("ResultsFilePath", ResultsFilePath);
        
        if(!IsSavePathValid(ResultsFilePath))
        {
            ResultsFilePath = QC_STORM_Parameters.SelectDisk();
        }
        
        jTextField_ResultPath.setText(ResultsFilePath);
    }


    public void SavePropertyFile(String filePath) throws FileNotFoundException, IOException
    {
        if(filePath==null)return;

        
        Properties pps = new Properties();
        OutputStream out = new FileOutputStream(filePath);

        pps.setProperty("Kadc", jTextField_Kadc.getText());
        pps.setProperty("Offset", jTextField_Offset.getText());
        pps.setProperty("QE", jTextField_QE.getText());

        pps.setProperty("RegionSize", (String)jComboBox_RegionSize.getSelectedItem());

        pps.setProperty("RawPixelSize", jTextField_RawPixelSize.getText());
        pps.setProperty("RenderingPixelSize", jTextField_RenderPixelSize.getText());
        
        pps.setProperty("LocType", Integer.toString(jComboBox_LocType.getSelectedIndex()));

        if(LocPara.ConsecutiveFitEnI!=0)
        {
            pps.setProperty("ConsecutiveFitEnable", "true");
        }else
        {
            pps.setProperty("ConsecutiveFitEnable", "false");
        }
        pps.setProperty("ConsecFilterRadius", jTextField_ConsecFilterRadius.getText());
        
        
        pps.setProperty("MinZDepth", jTextField_MinZDepth.getText());
        pps.setProperty("MaxZDepth", jTextField_MaxZDepth.getText());
        pps.setProperty("p4", jTextField_p4.getText());
        pps.setProperty("p3", jTextField_p3.getText());
        pps.setProperty("p2", jTextField_p2.getText());
        pps.setProperty("p1", jTextField_p1.getText());
        pps.setProperty("p0", jTextField_p0.getText());
        //
        
        pps.setProperty("MeanDistance", jTextField_MeanDistance.getText());
        pps.setProperty("DistanceTh", jTextField_DistanceTh.getText());
        pps.setProperty("RotateType", jTextField_RotateType.getText());
               
        //
        pps.setProperty("SNR_thF", jTextField_SNR_th.getText());
        
        pps.setProperty("StructureSize2D", jTextField_StructureSize2D.getText());
        pps.setProperty("ImagePerGroup", jTextField_ImagePerGroup.getText());
        
        // statastic information display enable
        pps.setProperty("TPhotonEnable", Boolean.toString(jCheckBox_Stat_TotalPhoton.isSelected()));
        pps.setProperty("LocPrecEnable", Boolean.toString(jCheckBox_Stat_LocPrec.isSelected()));
        pps.setProperty("SNREnable", Boolean.toString(jCheckBox_Stat_SNR.isSelected()));
        pps.setProperty("PSFEnable", Boolean.toString(jCheckBox_Stat_PSFWidth.isSelected()));

        pps.setProperty("TPhotonVariationEnable", Boolean.toString(jCheckBox_Stat_TotalPhotonVary.isSelected()));
        pps.setProperty("LocPrecVariationEnable", Boolean.toString(jCheckBox_Stat_LocPrecVary.isSelected()));
        pps.setProperty("OntimeVariationEnable", Boolean.toString(jCheckBox_Stat_OntimeVary.isSelected()));
        pps.setProperty("SNRVariationEnable", Boolean.toString(jCheckBox_Stat_SNRVary.isSelected()));        
        pps.setProperty("PSFWidthVariationEnable", Boolean.toString(jCheckBox_Stat_PSFWidthVary.isSelected()));
        pps.setProperty("ActivationDensityVariationEnable", Boolean.toString(jCheckBox_Stat_LocDensityVary.isSelected()));
        pps.setProperty("BackgroundVariationEnable", Boolean.toString(jCheckBox_Stat_BackgroundVary.isSelected()));       
        //
        pps.setProperty("SpaResolutionVaryEnable", Boolean.toString(jCheckBox_Stat_SpaResolutionVary.isSelected()));
        pps.setProperty("NyqResolutionVaryEnable", Boolean.toString(jCheckBox_Stat_NyqResolutionVary.isSelected()));        
        
        pps.setProperty("DimensionFDVaryEnable", Boolean.toString(jCheckBox_Stat_DimensionFDVary.isSelected()));
        pps.setProperty("LocDensityFDVary", Boolean.toString(jCheckBox_Stat_LocDensityFDVary.isSelected()));        

        
        pps.setProperty("OnTimeCalcEnable", Boolean.toString(jCheckBox_Stat_OntimeEn.isSelected()));
        pps.setProperty("SpaResolutionCalcEnable", Boolean.toString(jCheckBox_Stat_SpaResolutionEn.isSelected()));        
        
        
        pps.setProperty("DriftCorrectionEn", Boolean.toString(jCheckBox_ShiftCorrection.isSelected()));
        pps.setProperty("DriftCorrGroupFrameNum", jTextField_DriftCorrGroupFrameNum.getText());
        
        //
        pps.setProperty("ResultsFilePath", ResultsFilePath);

    	pps.store(out, "Localization para");

    }
    
    public String GetResultsSavePath()
    {
        return jTextField_ResultPath.getText();
    } 
    
    public String GetParaFileSavePath()
    {
        String ParaFilePath = QC_STORM_Parameters.SelectDisk();
        return ParaFilePath + LocParafileName;
    }    
    
    public boolean IsSavePathValid(String iPath)
    {
        File f = new File(iPath);
        boolean Valid = f.exists();
        
        return Valid;
    }

    
    public class MyListener implements WindowListener
    {

        @Override
        public void windowOpened(WindowEvent e) {
            
        }

        @Override
        public void windowClosing(WindowEvent e) {
            
            // closed
            PluginStatus = 2;

        }

        @Override
        public void windowClosed(WindowEvent e) {

        }

        @Override
        public void windowIconified(WindowEvent e) {
 
        }

        @Override
        public void windowDeiconified(WindowEvent e) {

        }

        @Override
        public void windowActivated(WindowEvent e) {

        }

        @Override
        public void windowDeactivated(WindowEvent e) {

        }
        
    }

}
