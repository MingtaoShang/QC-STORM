/*
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU LESSER GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/


package hust.whno.SMLM;

import org.micromanager.PropertyMap;
import org.micromanager.data.ProcessorConfigurator;

import hust.whno.SMLM.QC_STORM_Parameters.DevicePortInf;
import hust.whno.SMLM.QC_STORM_Parameters.LocalizationPara;
import hust.whno.SMLM.QC_STORM_Parameters.PIDCtlPara;
import ij.io.OpenDialog;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;
import javax.swing.JFileChooser;
import mmcorej.CMMCore;
import org.micromanager.ScriptController;
import org.micromanager.Studio;



public class QC_STORM_Configurator extends javax.swing.JFrame implements ProcessorConfigurator{

    private Studio studio_;
    ScriptController gui;
    
    volatile public LocalizationPara LocPara;
    public PIDCtlPara LocDensityPID;
     
    public DevicePortInf CtlBoxUART;
    public DevicePortInf TRStageUART;

    public int LaserPowerPercentage = 0;
    
    final String LocParafileName = "QC_STORM\\QC_STORM_MM_para.properties";

    volatile public String ResultsFilePath = "D:\\";
    
 
    // burst acquisition
    public QC_STORM_Acq_BurstAcq BurstLiveProc=null;
    volatile public boolean CurBurstLiveActive=false;

    // multi ROI acquisition
    public QC_STORM_Acq_MultiROI MultiROIAcq=null;
    
    volatile public boolean CurMultiROIAcqActive=false;
    
    volatile public boolean CurZDriftCorrActive = false;
    

    /**
     * Creates new form QC_STORM_Configurator
     */
    public QC_STORM_Configurator() {
        initComponents();
    }
    
    public QC_STORM_Configurator(Studio studio, PropertyMap settings)
    {
        studio_ = studio;
        gui = studio_.scripter();
        
        AllocateResources();
        
        initComponents(); 
        
        try {
            LoadPropertyFile(GetParaFileSavePath());
        } catch (Exception ex) {
           
        }
        
//        jTabbedPane1.remove(jPanel_ROMP);
    }
    void AllocateResources()
    {
        LocPara = new LocalizationPara();
        LocDensityPID = new PIDCtlPara();

        CtlBoxUART = new DevicePortInf();
        TRStageUART = new DevicePortInf();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_RegionSize = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextField_RawPixelSize = new javax.swing.JTextField();
        jCheckBox_Stat_ConsecutiveFit = new javax.swing.JCheckBox();
        jTextField_RenderPixelSize = new javax.swing.JTextField();
        jTextField_SNR_th = new javax.swing.JTextField();
        jComboBox_LocType = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jButton_LoadParaFile = new javax.swing.JButton();
        jTextField_ParaFile = new javax.swing.JTextField();
        jTextField_ResultPath = new javax.swing.JTextField();
        jButton_LoadResultPath = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jTextField_ConsecFilterRadius = new javax.swing.JTextField();
        jCheckBox_Stat_MultiFitEn = new javax.swing.JCheckBox();
        jCheckBox_Stat_WLEDisable = new javax.swing.JCheckBox();
        jCheckBox_Stat_SaveRawImage = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        jTextField_BurstFrameNum = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField_BurstCapturedNum = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_QE = new javax.swing.JTextField();
        jTextField_Kadc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_Offset = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTextField_MaxZDepth = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField_p0_XGY = new javax.swing.JTextField();
        jTextField_p3_XGY = new javax.swing.JTextField();
        jTextField_p4_XGY = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField_p2_XGY = new javax.swing.JTextField();
        jTextField_p1_XGY = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField_MinZDepth = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField_ZDepthCorrFactor = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jTextField_p4_XLY = new javax.swing.JTextField();
        jTextField_p3_XLY = new javax.swing.JTextField();
        jTextField_p2_XLY = new javax.swing.JTextField();
        jTextField_p1_XLY = new javax.swing.JTextField();
        jTextField_p0_XLY = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jButton_3DCalibAcq = new javax.swing.JButton();
        jTextField_3DCalibPlaneNum_H = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel_ROMP = new javax.swing.JPanel();
        jCheckBox_Stat_SpaResolutionEn = new javax.swing.JCheckBox();
        jLabel37 = new javax.swing.JLabel();
        jTextField_StructureSize2D = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jCheckBox_Stat_SpaResolutionVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_NyqResolutionVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_DimensionFDVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_LocDensityFDVary = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jTextField_ResolutionTh = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTextField_BufferedImgNum = new javax.swing.JTextField();
        jCheckBox_Stat_LocPrec = new javax.swing.JCheckBox();
        jCheckBox_Stat_PSFWidth = new javax.swing.JCheckBox();
        jCheckBox_Stat_SNR = new javax.swing.JCheckBox();
        jCheckBox_Stat_TotalPhoton = new javax.swing.JCheckBox();
        jCheckBox_Stat_TotalPhotonVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_LocPrecVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_OntimeVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_SNRVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_PSFWidthVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_LocDensityVary = new javax.swing.JCheckBox();
        jCheckBox_Stat_BackgroundVary = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jCheckBox_Stat_DepthMapDisp = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox_TrackDensity = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        jComboBox_CtlBoxUART = new javax.swing.JComboBox();
        jTextField_CtlBoxUARTBaudRate = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jCheckBox_DensityManualTargetEn = new javax.swing.JCheckBox();
        jTextField_ManualDensity = new javax.swing.JTextField();
        jCheckBox_TrackZPos = new javax.swing.JCheckBox();
        jLabel32 = new javax.swing.JLabel();
        jTextField_DensityCtl_P = new javax.swing.JTextField();
        jTextField_DensityCtl_I = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel34 = new javax.swing.JLabel();
        jTextField_ZFocusMoveSteps = new javax.swing.JTextField();
        jButton_ZAdjN = new javax.swing.JButton();
        jButton_ZAdjP = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jTextField_ZDriftCorrFrameNum = new javax.swing.JTextField();
        jTextField_MaxLocDensity = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jButton_DnsitySet = new javax.swing.JButton();
        jButton_DensityReset = new javax.swing.JButton();
        jComboBox_ZCorrPara = new javax.swing.JComboBox();
        jLabel47 = new javax.swing.JLabel();
        jTextField_AcLaserPower = new javax.swing.JTextField();
        jButton_DensityReset1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField_StageMoveSteps_X = new javax.swing.JTextField();
        jTextField_StageMoveSteps_Y = new javax.swing.JTextField();
        jTextField_MultiROINum_Y = new javax.swing.JTextField();
        jTextField_MultiROINum_X = new javax.swing.JTextField();
        jButton_MROIAcq = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jComboBox_TRStageUART = new javax.swing.JComboBox();
        jLabel41 = new javax.swing.JLabel();
        jTextField_TRStageUARTBaudRate = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField_TRAdjNum_X = new javax.swing.JTextField();
        jButton_TRXAdj1 = new javax.swing.JButton();
        jButton_TRXAdj2 = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        jTextField_TRAdjNum_Y = new javax.swing.JTextField();
        jButton_TRYAdj1 = new javax.swing.JButton();
        jButton_TRYAdj2 = new javax.swing.JButton();
        jCheckBox_NoAcqIni = new javax.swing.JCheckBox();
        jLabel45 = new javax.swing.JLabel();
        jTextField_FOVOverlapPercent = new javax.swing.JTextField();
        jCheckBox_StageReturn = new javax.swing.JCheckBox();
        jLabel49 = new javax.swing.JLabel();
        jTextField_MultiROI_WaitTime = new javax.swing.JTextField();
        jButton_NewSRImage = new javax.swing.JButton();
        jButton_BurstLive = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Fitting ROI size (pixels):");

        jComboBox_RegionSize.setMaximumRowCount(10);
        jComboBox_RegionSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "7", "9", "11", "13", "15", "17" }));
        jComboBox_RegionSize.setSelectedIndex(1);
        jComboBox_RegionSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_RegionSizeActionPerformed(evt);
            }
        });

        jLabel5.setText("Raw image pixel size (nm):");

        jTextField_RawPixelSize.setText("100");

        jCheckBox_Stat_ConsecutiveFit.setText("Consecutive fitting (temporal grouping)");
        jCheckBox_Stat_ConsecutiveFit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_Stat_ConsecutiveFitActionPerformed(evt);
            }
        });

        jTextField_RenderPixelSize.setText("20");

        jTextField_SNR_th.setText("5");
        jTextField_SNR_th.setToolTipText("peak photon vs background");

        jComboBox_LocType.setMaximumRowCount(10);
        jComboBox_LocType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gaussian 2D", "Astigmatism 3D" }));
        jComboBox_LocType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_LocTypeActionPerformed(evt);
            }
        });

        jLabel6.setText("Rendering pixel size (nm):");

        jLabel22.setText("Rendering SNR threshold:");

        jLabel26.setText("Fitting type:");

        jButton_LoadParaFile.setText("Load configuration file");
        jButton_LoadParaFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadParaFileActionPerformed(evt);
            }
        });

        jTextField_ResultPath.setText("D:\\");

            jButton_LoadResultPath.setText("Change result save path");
            jButton_LoadResultPath.setActionCommand("Change results save path");
            jButton_LoadResultPath.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_LoadResultPathActionPerformed(evt);
                }
            });

            jLabel44.setText("Consecutive fitting radius (nm):");

            jTextField_ConsecFilterRadius.setText("80");

            jCheckBox_Stat_MultiFitEn.setText("Multi-emitter fitting");
            jCheckBox_Stat_MultiFitEn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_MultiFitEnActionPerformed(evt);
                }
            });

            jCheckBox_Stat_WLEDisable.setText("Low SNR image, disable WLE");

            jCheckBox_Stat_SaveRawImage.setText("Save raw images");

            jLabel17.setText("Max acquisition number:");
            jLabel17.setToolTipText("");
            jLabel17.setAutoscrolls(true);

            jTextField_BurstFrameNum.setText("20000");
            jTextField_BurstFrameNum.setToolTipText("Max acquisition number for burst acquisition");

            jLabel18.setText("Captured image number:");
            jLabel18.setAutoscrolls(true);

            jTextField_BurstCapturedNum.setText("0");
            jTextField_BurstCapturedNum.setToolTipText("captured image number");

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(239, 239, 239)
                            .addComponent(jComboBox_RegionSize, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(239, 239, 239)
                            .addComponent(jTextField_RawPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(239, 239, 239)
                            .addComponent(jTextField_RenderPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(239, 239, 239)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton_LoadResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton_LoadParaFile, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jCheckBox_Stat_ConsecutiveFit, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jCheckBox_Stat_MultiFitEn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextField_ParaFile, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_ResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel44)
                                .addComponent(jCheckBox_Stat_SaveRawImage))
                            .addGap(23, 23, 23)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField_BurstCapturedNum, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_BurstFrameNum, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_ConsecFilterRadius, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(239, 239, 239)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox_LocType, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_SNR_th, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox_Stat_WLEDisable))))
                    .addContainerGap(71, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_RegionSize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_RawPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_RenderPixelSize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_SNR_th, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(11, 11, 11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_LocType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_MultiFitEn)
                        .addComponent(jCheckBox_Stat_WLEDisable))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox_Stat_ConsecutiveFit)
                    .addGap(2, 2, 2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField_ConsecFilterRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jCheckBox_Stat_SaveRawImage)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_BurstFrameNum))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_BurstCapturedNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_ResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_LoadResultPath))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_LoadParaFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_ParaFile))
                    .addGap(114, 114, 114))
            );

            jTabbedPane1.addTab("Imaging", jPanel1);

            jLabel3.setText("QE:");

            jTextField_QE.setText("0.72");

            jTextField_Kadc.setText("0.45");

            jLabel1.setText("Kadc (e-/DN):");

            jLabel2.setText("Offset (DN):");

            jTextField_Offset.setText("100");

            javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
            jPanel4.setLayout(jPanel4Layout);
            jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(56, 56, 56)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_Kadc)
                                .addComponent(jTextField_Offset, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(56, 56, 56)
                            .addComponent(jTextField_QE, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(224, Short.MAX_VALUE))
            );
            jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_QE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_Kadc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(16, 16, 16)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_Offset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(293, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("Camera", jPanel4);

            jTextField_MaxZDepth.setText("500");
            jTextField_MaxZDepth.setToolTipText("Max Z depth");

            jLabel7.setText("Z depth rendering range (nm):");

            jLabel27.setText("Z depth calibration curve by 4 order polynomial:");

            jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel9.setText("p4:");

            jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel10.setText("p3:");

            jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel11.setText("p2:");

            jTextField_p0_XGY.setText("0");

            jTextField_p3_XGY.setText("-4.2170");

            jTextField_p4_XGY.setText("0");

            jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel12.setText("p1:");

            jTextField_p2_XGY.setText("13.08");

            jTextField_p1_XGY.setText("-278.79");

            jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel8.setText("p0:");

            jTextField_MinZDepth.setText("-500");
            jTextField_MinZDepth.setToolTipText("Min Z depth");

            jLabel24.setText("Z depth correction factor:");

            jTextField_ZDepthCorrFactor.setText("1.0");
            jTextField_ZDepthCorrFactor.setToolTipText("Min Z depth");

            jLabel30.setText("Z = p4*d^4 + ... + p0*d^0, d = SigmaX^2 - SigmaY^2 ");

            jLabel31.setText("part1, PSF SigmaX > PSF SigmaY:");

            jLabel38.setText("part2, PSF SigmaX < PSF SigmaY:");

            jTextField_p4_XLY.setText("0");

            jTextField_p3_XLY.setText("-4.2170");

            jTextField_p2_XLY.setText("13.08");

            jTextField_p1_XLY.setText("-278.79");

            jTextField_p0_XLY.setText("0");

            jLabel48.setText("Plane number (half):");

            jButton_3DCalibAcq.setText("3D calibration image acq");
            jButton_3DCalibAcq.setActionCommand("");
            jButton_3DCalibAcq.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_3DCalibAcqActionPerformed(evt);
                }
            });

            jTextField_3DCalibPlaneNum_H.setText("15");

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(207, 207, 207)
                                .addComponent(jTextField_ZDepthCorrFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel24)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_MinZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_MaxZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                    .addComponent(jTextField_p4_XGY))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField_p3_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField_p2_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_p1_XGY, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_p0_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jTextField_p4_XLY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_p3_XLY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_3DCalibPlaneNum_H, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jTextField_p2_XLY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_p1_XLY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_p0_XLY, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                        .addComponent(jButton_3DCalibAcq, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(50, Short.MAX_VALUE))
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_MaxZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_MinZDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField_ZDepthCorrFactor)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel30)
                    .addGap(21, 21, 21)
                    .addComponent(jLabel31)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_p4_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p3_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p2_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_p1_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_p0_XGY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel38)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_p1_XLY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_p0_XLY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jTextField_p2_XLY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p3_XLY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_p4_XLY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_3DCalibPlaneNum_H, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton_3DCalibAcq, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(38, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("3D", jPanel2);

            jCheckBox_Stat_SpaResolutionEn.setText("Spatial resolution calculation");

            jLabel37.setText("Structure size 2D (nm):");

            jTextField_StructureSize2D.setText("50");
            jTextField_StructureSize2D.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_StructureSize2DActionPerformed(evt);
                }
            });

            jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
            jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel16.setText("Spatial resolution time-varying curve:");

            jCheckBox_Stat_SpaResolutionVary.setText("Spatial resolution (Lateral)");
            jCheckBox_Stat_SpaResolutionVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_SpaResolutionVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_NyqResolutionVary.setText("Nyquist resolution");
            jCheckBox_Stat_NyqResolutionVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_NyqResolutionVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_DimensionFDVary.setText("Dimension FD");
            jCheckBox_Stat_DimensionFDVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_DimensionFDVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_LocDensityFDVary.setText("Localization density FD");
            jCheckBox_Stat_LocDensityFDVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_LocDensityFDVaryActionPerformed(evt);
                }
            });

            jSeparator4.setForeground(new java.awt.Color(153, 153, 153));

            jLabel19.setText("Spatial resolution target (nm):");
            jLabel19.setAutoscrolls(true);

            jTextField_ResolutionTh.setText("50");
            jTextField_ResolutionTh.setToolTipText("target acquisition spatial resolution threshold");

            jLabel29.setText("Spatial resolution controled acquisiton:");
            jLabel29.setAutoscrolls(true);

            javax.swing.GroupLayout jPanel_ROMPLayout = new javax.swing.GroupLayout(jPanel_ROMP);
            jPanel_ROMP.setLayout(jPanel_ROMPLayout);
            jPanel_ROMPLayout.setHorizontalGroup(
                jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                            .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                                    .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jTextField_StructureSize2D, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jCheckBox_Stat_SpaResolutionEn)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                                            .addComponent(jLabel19)
                                            .addGap(34, 34, 34)
                                            .addComponent(jTextField_ResolutionTh, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                                            .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jCheckBox_Stat_DimensionFDVary)
                                                .addComponent(jCheckBox_Stat_SpaResolutionVary))
                                            .addGap(35, 35, 35)
                                            .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jCheckBox_Stat_NyqResolutionVary)
                                                .addComponent(jCheckBox_Stat_LocDensityFDVary))))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGap(82, 82, 82))))
            );
            jPanel_ROMPLayout.setVerticalGroup(
                jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_ROMPLayout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(jCheckBox_Stat_SpaResolutionEn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_StructureSize2D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(31, 31, 31)
                    .addComponent(jLabel16)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_SpaResolutionVary)
                        .addComponent(jCheckBox_Stat_NyqResolutionVary))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_DimensionFDVary)
                        .addComponent(jCheckBox_Stat_LocDensityFDVary))
                    .addGap(18, 18, 18)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel_ROMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_ResolutionTh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(182, 182, 182))
            );

            jTabbedPane1.addTab("ROMP", jPanel_ROMP);

            jLabel15.setText("Buffered image display:");

            jTextField_BufferedImgNum.setText("0");

            jCheckBox_Stat_LocPrec.setText("Localization precision");
            jCheckBox_Stat_LocPrec.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_LocPrecActionPerformed(evt);
                }
            });

            jCheckBox_Stat_PSFWidth.setText("PSF width");
            jCheckBox_Stat_PSFWidth.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_PSFWidthActionPerformed(evt);
                }
            });

            jCheckBox_Stat_SNR.setSelected(true);
            jCheckBox_Stat_SNR.setText("SNR");
            jCheckBox_Stat_SNR.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_SNRActionPerformed(evt);
                }
            });

            jCheckBox_Stat_TotalPhoton.setSelected(true);
            jCheckBox_Stat_TotalPhoton.setText("Total photon");
            jCheckBox_Stat_TotalPhoton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_TotalPhotonActionPerformed(evt);
                }
            });

            jCheckBox_Stat_TotalPhotonVary.setText("Total photon");
            jCheckBox_Stat_TotalPhotonVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_TotalPhotonVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_LocPrecVary.setSelected(true);
            jCheckBox_Stat_LocPrecVary.setText("Localization precision");
            jCheckBox_Stat_LocPrecVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_LocPrecVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_OntimeVary.setText("Ontime");
            jCheckBox_Stat_OntimeVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_OntimeVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_SNRVary.setSelected(true);
            jCheckBox_Stat_SNRVary.setText("SNR");
            jCheckBox_Stat_SNRVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_SNRVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_PSFWidthVary.setSelected(true);
            jCheckBox_Stat_PSFWidthVary.setText("PSF width");
            jCheckBox_Stat_PSFWidthVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_PSFWidthVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_LocDensityVary.setSelected(true);
            jCheckBox_Stat_LocDensityVary.setText("Localization density 2D");
            jCheckBox_Stat_LocDensityVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_LocDensityVaryActionPerformed(evt);
                }
            });

            jCheckBox_Stat_BackgroundVary.setText("Background");
            jCheckBox_Stat_BackgroundVary.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_BackgroundVaryActionPerformed(evt);
                }
            });

            jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
            jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel13.setText("Histogram:");

            jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
            jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel14.setText("Time-varying curve:");

            jCheckBox_Stat_DepthMapDisp.setText("DepthMap display (beads imaging)");
            jCheckBox_Stat_DepthMapDisp.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_Stat_DepthMapDispActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_DepthMapDisp)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox_Stat_BackgroundVary)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jCheckBox_Stat_OntimeVary)
                                .addComponent(jCheckBox_Stat_PSFWidthVary)
                                .addComponent(jCheckBox_Stat_TotalPhotonVary)
                                .addComponent(jCheckBox_Stat_TotalPhoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox_Stat_SNR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox_Stat_LocPrec, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox_Stat_PSFWidth)
                                .addComponent(jCheckBox_Stat_LocPrecVary, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox_Stat_SNRVary)
                                .addComponent(jCheckBox_Stat_LocDensityVary)
                                .addComponent(jTextField_BufferedImgNum, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(107, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_BufferedImgNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jLabel13)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_TotalPhoton)
                        .addComponent(jCheckBox_Stat_LocPrec))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_SNR)
                        .addComponent(jCheckBox_Stat_PSFWidth))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel14)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_Stat_TotalPhotonVary)
                        .addComponent(jCheckBox_Stat_LocPrecVary))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_SNRVary)
                        .addComponent(jCheckBox_Stat_OntimeVary))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Stat_LocDensityVary)
                        .addComponent(jCheckBox_Stat_PSFWidthVary))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBox_Stat_BackgroundVary)
                    .addGap(28, 28, 28)
                    .addComponent(jCheckBox_Stat_DepthMapDisp)
                    .addContainerGap(130, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("Statistics", jPanel3);

            jCheckBox_TrackDensity.setText("Stabilize localization density");
            jCheckBox_TrackDensity.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_TrackDensityActionPerformed(evt);
                }
            });

            jLabel20.setText("CtlBox UART:");

            jComboBox_CtlBoxUART.setMaximumRowCount(10);
            jComboBox_CtlBoxUART.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COM0", "COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8", "COM9", "COM10", "COM11", "COM12", "COM13", "COM14", "COM15", "COM16", "COM17", "COM18", "COM19" }));
            jComboBox_CtlBoxUART.setSelectedIndex(3);
            jComboBox_CtlBoxUART.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox_CtlBoxUARTActionPerformed(evt);
                }
            });

            jTextField_CtlBoxUARTBaudRate.setText("38400");
            jTextField_CtlBoxUARTBaudRate.setEnabled(false);
            jTextField_CtlBoxUARTBaudRate.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_CtlBoxUARTBaudRateActionPerformed(evt);
                }
            });

            jLabel21.setText("Baud rate:");

            jCheckBox_DensityManualTargetEn.setSelected(true);
            jCheckBox_DensityManualTargetEn.setText("Manual density target:");
            jCheckBox_DensityManualTargetEn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_DensityManualTargetEnActionPerformed(evt);
                }
            });

            jTextField_ManualDensity.setText("1.2");
            jTextField_ManualDensity.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_ManualDensityActionPerformed(evt);
                }
            });

            jCheckBox_TrackZPos.setText("Z drift correction");
            jCheckBox_TrackZPos.setToolTipText("Only for burst acquisition");
            jCheckBox_TrackZPos.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCheckBox_TrackZPosActionPerformed(evt);
                }
            });

            jLabel32.setText("PID Proportion & Integral :");

            jTextField_DensityCtl_P.setText("1");
            jTextField_DensityCtl_P.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_DensityCtl_PActionPerformed(evt);
                }
            });

            jTextField_DensityCtl_I.setText("0.1");
            jTextField_DensityCtl_I.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_DensityCtl_IActionPerformed(evt);
                }
            });

            jLabel34.setText("Min motor move steps :");

            jTextField_ZFocusMoveSteps.setText("3");
            jTextField_ZFocusMoveSteps.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_ZFocusMoveStepsActionPerformed(evt);
                }
            });

            jButton_ZAdjN.setText("Up");
            jButton_ZAdjN.setActionCommand("");
            jButton_ZAdjN.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_ZAdjNActionPerformed(evt);
                }
            });

            jButton_ZAdjP.setText("Down");
            jButton_ZAdjP.setActionCommand("");
            jButton_ZAdjP.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_ZAdjPActionPerformed(evt);
                }
            });

            jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel35.setText("Manually move");

            jLabel36.setText("Correction frame num:");

            jTextField_ZDriftCorrFrameNum.setText("500");
            jTextField_ZDriftCorrFrameNum.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_ZDriftCorrFrameNumActionPerformed(evt);
                }
            });

            jTextField_MaxLocDensity.setText("2");
            jTextField_MaxLocDensity.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_MaxLocDensityActionPerformed(evt);
                }
            });

            jLabel39.setText("Max tolerable density:");

            jLabel46.setText("LaserPower (%):");

            jButton_DnsitySet.setText("Inc");
            jButton_DnsitySet.setActionCommand("");
            jButton_DnsitySet.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_DnsitySetActionPerformed(evt);
                }
            });

            jButton_DensityReset.setText("Dec");
            jButton_DensityReset.setActionCommand("");
            jButton_DensityReset.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_DensityResetActionPerformed(evt);
                }
            });

            jComboBox_ZCorrPara.setMaximumRowCount(10);
            jComboBox_ZCorrPara.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SNR", "PSF width", "SNR - PSF width", "SN * (-PSF width)", "Fluo number" }));
            jComboBox_ZCorrPara.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox_ZCorrParaActionPerformed(evt);
                }
            });

            jLabel47.setText("Correction para:");

            jTextField_AcLaserPower.setText("0");
            jTextField_AcLaserPower.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_AcLaserPowerActionPerformed(evt);
                }
            });

            jButton_DensityReset1.setText("Reset");
            jButton_DensityReset1.setActionCommand("");
            jButton_DensityReset1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_DensityReset1ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
            jPanel5.setLayout(jPanel5Layout);
            jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(46, 46, 46)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField_ZDriftCorrFrameNum, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBox_ZCorrPara, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jComboBox_CtlBoxUART, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField_CtlBoxUARTBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap())
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox_DensityManualTargetEn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                        .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextField_MaxLocDensity, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                                .addComponent(jTextField_ManualDensity, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(jTextField_DensityCtl_P, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                                    .addGap(30, 30, 30)
                                    .addComponent(jTextField_ZFocusMoveSteps, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jCheckBox_TrackZPos, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextField_AcLaserPower, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(23, 23, 23)
                                    .addComponent(jButton_DnsitySet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(jButton_ZAdjN, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton_ZAdjP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(jButton_DensityReset)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton_DensityReset1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(7, 7, 7)))
                                    .addGap(275, 275, 275))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jTextField_DensityCtl_I, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jCheckBox_TrackDensity)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(jSeparator3)
                                .addComponent(jSeparator2))
                            .addGap(282, 282, 282))))
            );
            jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_CtlBoxUART, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_CtlBoxUARTBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jCheckBox_TrackDensity)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_MaxLocDensity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_DensityManualTargetEn, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField_ManualDensity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_DensityCtl_P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_DensityCtl_I, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_AcLaserPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_DnsitySet, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_DensityReset, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_DensityReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox_TrackZPos))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_ZAdjN, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_ZAdjP))
                        .addComponent(jTextField_ZFocusMoveSteps, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_ZDriftCorrFrameNum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox_ZCorrPara, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(76, 76, 76))
            );

            jTabbedPane1.addTab("FeedbackCtl", jPanel5);

            jLabel23.setText("FOV number (X x Y):");

            jLabel25.setText("FOV stage move steps (X x Y):");

            jTextField_StageMoveSteps_X.setText("83");
            jTextField_StageMoveSteps_X.setToolTipText("motor steps between two FOVs");

            jTextField_StageMoveSteps_Y.setText("83");

            jTextField_MultiROINum_Y.setText("3");

            jTextField_MultiROINum_X.setText("3");

            jButton_MROIAcq.setText("Multi FOV acquisition");
            jButton_MROIAcq.setActionCommand("");
            jButton_MROIAcq.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_MROIAcqActionPerformed(evt);
                }
            });

            jLabel40.setText("Translation stage UART:");

            jComboBox_TRStageUART.setMaximumRowCount(10);
            jComboBox_TRStageUART.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COM0", "COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8", "COM9", "COM10", "COM11", "COM12", "COM13", "COM14", "COM15", "COM16", "COM17", "COM18", "COM19" }));
            jComboBox_TRStageUART.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox_TRStageUARTActionPerformed(evt);
                }
            });

            jLabel41.setText("Baud rate:");

            jTextField_TRStageUARTBaudRate.setText("57600");
            jTextField_TRStageUARTBaudRate.setEnabled(false);

            jLabel42.setText("Manually move X:");

            jTextField_TRAdjNum_X.setText("10");

            jButton_TRXAdj1.setText("<-");
            jButton_TRXAdj1.setActionCommand("");
            jButton_TRXAdj1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_TRXAdj1ActionPerformed(evt);
                }
            });

            jButton_TRXAdj2.setText("->");
            jButton_TRXAdj2.setActionCommand("");
            jButton_TRXAdj2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_TRXAdj2ActionPerformed(evt);
                }
            });

            jLabel43.setText("Manually move Y:");

            jTextField_TRAdjNum_Y.setText("10");

            jButton_TRYAdj1.setText("<-");
            jButton_TRYAdj1.setActionCommand("");
            jButton_TRYAdj1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_TRYAdj1ActionPerformed(evt);
                }
            });

            jButton_TRYAdj2.setText("->");
            jButton_TRYAdj2.setActionCommand("");
            jButton_TRYAdj2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_TRYAdj2ActionPerformed(evt);
                }
            });

            jCheckBox_NoAcqIni.setText("No acq initialization");

            jLabel45.setText("FOV overlap percent:");

            jTextField_FOVOverlapPercent.setText("5.0");
            jTextField_FOVOverlapPercent.setToolTipText("overlap for registration");

            jCheckBox_StageReturn.setText("Return to starting point");

            jLabel49.setText("Wait time (ms):");

            jTextField_MultiROI_WaitTime.setText("0");

            javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
            jPanel6.setLayout(jPanel6Layout);
            jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel23)
                        .addComponent(jLabel25)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel42)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField_TRAdjNum_X, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel43)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField_TRAdjNum_Y, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_MultiROINum_X, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_StageMoveSteps_X, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_FOVOverlapPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_TRXAdj1)
                        .addComponent(jButton_TRYAdj1))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton_TRXAdj2)
                        .addComponent(jButton_TRYAdj2)
                        .addComponent(jTextField_StageMoveSteps_Y, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_MultiROINum_Y))
                    .addGap(18, 18, 18)
                    .addComponent(jTextField_TRStageUARTBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(59, Short.MAX_VALUE))
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(71, 71, 71)
                            .addComponent(jButton_MROIAcq, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(186, 186, 186)
                            .addComponent(jComboBox_TRStageUART, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(jLabel45))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox_NoAcqIni)
                                .addComponent(jLabel49))
                            .addGap(41, 41, 41)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField_MultiROI_WaitTime, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox_StageReturn))))
                    .addContainerGap(101, Short.MAX_VALUE))
            );
            jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_TRStageUART, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jTextField_TRStageUARTBaudRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_NoAcqIni)
                        .addComponent(jCheckBox_StageReturn))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_MultiROI_WaitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_MultiROINum_X, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_MultiROINum_Y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel25)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_StageMoveSteps_X, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_StageMoveSteps_Y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_FOVOverlapPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel45))
                    .addGap(21, 21, 21)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_TRAdjNum_X, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_TRXAdj1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_TRXAdj2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_TRAdjNum_Y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_TRYAdj1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addComponent(jButton_TRYAdj2))
                    .addGap(18, 18, 18)
                    .addComponent(jButton_MROIAcq, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(110, 110, 110))
            );

            jTabbedPane1.addTab("MultiFOV", jPanel6);

            jButton_NewSRImage.setText("New live acquisition");
            jButton_NewSRImage.setToolTipText("clear old data for live mode");
            jButton_NewSRImage.setActionCommand("");
            jButton_NewSRImage.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_NewSRImageActionPerformed(evt);
                }
            });

            jButton_BurstLive.setText("Burst live acquisition");
            jButton_BurstLive.setToolTipText("Burst live acquisition without save raw image");
            jButton_BurstLive.setActionCommand("");
            jButton_BurstLive.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_BurstLiveActionPerformed(evt);
                }
            });

            jLabel28.setText("Parameters:");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton_BurstLive, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jButton_NewSRImage, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel28))))
                    .addContainerGap(171, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE)))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel28)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 480, Short.MAX_VALUE)
                    .addComponent(jButton_NewSRImage, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton_BurstLive, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(41, 41, 41))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(179, Short.MAX_VALUE)))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_RegionSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_RegionSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_RegionSizeActionPerformed

    private void jCheckBox_Stat_ConsecutiveFitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_ConsecutiveFitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_Stat_ConsecutiveFitActionPerformed

    private void jComboBox_LocTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_LocTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_LocTypeActionPerformed

    private void jButton_LoadParaFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadParaFileActionPerformed
        // TODO add your handling code here:
        OpenDialog dlgDialog=new OpenDialog("open para file");

        String filePath=dlgDialog.getPath();
        jTextField_ParaFile.setText(filePath);

        try {
            LoadPropertyFile(filePath);
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        }
    }//GEN-LAST:event_jButton_LoadParaFileActionPerformed

    private void jButton_LoadResultPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadResultPathActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.showDialog(null,null);
        File fi = jf.getSelectedFile();
        ResultsFilePath = fi.getAbsolutePath();

        char EndMarkC = '\\';
        if(ResultsFilePath.charAt(ResultsFilePath.length()-1)!=EndMarkC)
        {
            ResultsFilePath+=EndMarkC;
        }

        jTextField_ResultPath.setText(ResultsFilePath);

    }//GEN-LAST:event_jButton_LoadResultPathActionPerformed

    private void jCheckBox_Stat_SNRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_SNRActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_SNRActionPerformed

    private void jCheckBox_Stat_TotalPhotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_TotalPhotonActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_TotalPhotonActionPerformed

    private void jCheckBox_Stat_OntimeVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_OntimeVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_OntimeVaryActionPerformed

    private void jCheckBox_TrackDensityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_TrackDensityActionPerformed

        SetFeedbackEnable(0);

    }//GEN-LAST:event_jCheckBox_TrackDensityActionPerformed

    private void jComboBox_CtlBoxUARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CtlBoxUARTActionPerformed

        int AcDensityCtlEnI=(jCheckBox_TrackDensity.isSelected()) ? 1 : 0;
        int ZDriftCtlEnI=(jCheckBox_TrackZPos.isSelected()) ? 1 : 0;

        if((AcDensityCtlEnI>0)||(ZDriftCtlEnI>0))
        {
            SetFeedbackDevicePort();
        }
    }//GEN-LAST:event_jComboBox_CtlBoxUARTActionPerformed

    private void jTextField_CtlBoxUARTBaudRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_CtlBoxUARTBaudRateActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_CtlBoxUARTBaudRateActionPerformed

    private void jCheckBox_DensityManualTargetEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_DensityManualTargetEnActionPerformed

        SetFeedbackPara(0);
    }//GEN-LAST:event_jCheckBox_DensityManualTargetEnActionPerformed

    private void jTextField_ManualDensityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ManualDensityActionPerformed

        SetFeedbackPara(0);

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ManualDensityActionPerformed

    private void jCheckBox_TrackZPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_TrackZPosActionPerformed
        // z pos goal
        SetFeedbackEnable(2);

        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_TrackZPosActionPerformed

    private void jTextField_DensityCtl_PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_DensityCtl_PActionPerformed
        // TODO add your handling code here:
        SetFeedbackPara(0);
    }//GEN-LAST:event_jTextField_DensityCtl_PActionPerformed

    private void jTextField_DensityCtl_IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_DensityCtl_IActionPerformed
        // TODO add your handling code here:
        SetFeedbackPara(0);
    }//GEN-LAST:event_jTextField_DensityCtl_IActionPerformed

    private void jTextField_ZFocusMoveStepsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ZFocusMoveStepsActionPerformed
        // TODO add your handling code here:
        SetFeedbackPara(2);
    }//GEN-LAST:event_jTextField_ZFocusMoveStepsActionPerformed

    private void jButton_ZAdjNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ZAdjNActionPerformed
        // TODO add your handling code here:
        SetFeedbackDevicePort();

        int SMMoveSteps = GetZMoveSteps();
        SMMoveSteps = -SMMoveSteps;

        QC_STORM_Plug.lm_ZDepthSMMove(SMMoveSteps);  //SMMoveSteps

    }//GEN-LAST:event_jButton_ZAdjNActionPerformed

    private void jButton_ZAdjPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ZAdjPActionPerformed
        // TODO add your handling code here:
        SetFeedbackDevicePort();

        int SMMoveSteps = GetZMoveSteps();

        QC_STORM_Plug.lm_ZDepthSMMove(SMMoveSteps);  //SMMoveSteps

    }//GEN-LAST:event_jButton_ZAdjPActionPerformed

    private void jTextField_ZDriftCorrFrameNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ZDriftCorrFrameNumActionPerformed
        // TODO add your handling code here:
        SetFeedbackPara(2);
    }//GEN-LAST:event_jTextField_ZDriftCorrFrameNumActionPerformed

    private void jTextField_MaxLocDensityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MaxLocDensityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MaxLocDensityActionPerformed

    private void jButton_MROIAcqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_MROIAcqActionPerformed
        // TODO add your handling code here:

        SetFeedbackDevicePort();
        
        SetTranslationStagePort();

        QC_STORM_Plug.lm_SetMultiFOVAcqParameters(GetMultiFovOverlapPercent());

        // enable z feedback
        jCheckBox_TrackZPos.setSelected(true);


        if(CurMultiROIAcqActive==false)
        {

            // start burst acquisition
            ClearLiveData();
            
            CurZDriftCorrActive = true;
            
            CurMultiROIAcqActive = true;
            jButton_MROIAcq.setText("Stop acq");
            
            jButton_BurstLive.setEnabled(false);

            MultiROIAcq = new QC_STORM_Acq_MultiROI(studio_, this);
            MultiROIAcq.StartMultiROIAcq();
        }
        else
        {
            // stop burst acquisition
            
            CurZDriftCorrActive = false;
            
            CurMultiROIAcqActive = false;

            // also stop burst acq
            CurBurstLiveActive = false;

            // wait thread finish and set enable
            jButton_MROIAcq.setEnabled(false);
            
            
            
        }

        if(CurMultiROIAcqActive)
        {
            try {
                SavePropertyFile(GetParaFileSavePath());
            }catch (Exception ex) {

            }
        }

    }//GEN-LAST:event_jButton_MROIAcqActionPerformed

    private void jComboBox_TRStageUARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TRStageUARTActionPerformed
        // TODO add your handling code here:
        // will be called when acqusition start


    }//GEN-LAST:event_jComboBox_TRStageUARTActionPerformed

    private void jButton_TRXAdj1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TRXAdj1ActionPerformed
        // TODO add your handling code here:
        SetTranslationStagePort();

        int MoveSteps=Integer.parseInt(jTextField_TRAdjNum_X.getText());
        MoveSteps=-MoveSteps;

        QC_STORM_Plug.lm_TranslationStageMove(MoveSteps, 0, 0);

    }//GEN-LAST:event_jButton_TRXAdj1ActionPerformed

    private void jButton_TRXAdj2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TRXAdj2ActionPerformed
        // TODO add your handling code here:
        SetTranslationStagePort();

        int MoveSteps=Integer.parseInt(jTextField_TRAdjNum_X.getText());

        QC_STORM_Plug.lm_TranslationStageMove(MoveSteps, 0, 0);

    }//GEN-LAST:event_jButton_TRXAdj2ActionPerformed

    private void jButton_TRYAdj1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TRYAdj1ActionPerformed
        // TODO add your handling code here:
        SetTranslationStagePort();

        int MoveSteps=Integer.parseInt(jTextField_TRAdjNum_Y.getText());
        MoveSteps=-MoveSteps;

        QC_STORM_Plug.lm_TranslationStageMove(0, MoveSteps, 0);

    }//GEN-LAST:event_jButton_TRYAdj1ActionPerformed

    private void jButton_TRYAdj2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TRYAdj2ActionPerformed
        // TODO add your handling code here:
        SetTranslationStagePort();

        int MoveSteps=Integer.parseInt(jTextField_TRAdjNum_Y.getText());

        QC_STORM_Plug.lm_TranslationStageMove(0, MoveSteps, 0);

    }//GEN-LAST:event_jButton_TRYAdj2ActionPerformed

    private void jButton_NewSRImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NewSRImageActionPerformed
        studio_.data().notifyPipelineChanged();
        
        
    }//GEN-LAST:event_jButton_NewSRImageActionPerformed

    private void jButton_BurstLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BurstLiveActionPerformed

        SetFeedbackDevicePort();
        
        QC_STORM_Plug.lm_SetMultiFOVAcqParameters(0.0f);
        
        if(CurBurstLiveActive==false)
        {
            // start burst acquisition
            ClearLiveData();
            
            CurZDriftCorrActive = true;
            
            CurBurstLiveActive = true;
            jButton_BurstLive.setText("Stop acq");

            try {
                BurstLiveProc = new QC_STORM_Acq_BurstAcq(studio_, this, "");
                BurstLiveProc.StartBurstAcq();

            } catch (Exception ex) {
                gui.message("get BurstLiveAcqThread exception");
            }
        }
        else
        {
            CurZDriftCorrActive = false;
            
            // stop burst acquisition
            CurBurstLiveActive = false;

            // wait thread finish and set enable
            jButton_BurstLive.setEnabled(false);
        }

        if(CurBurstLiveActive)
        {
            try {
                SavePropertyFile(GetParaFileSavePath());
            }catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_jButton_BurstLiveActionPerformed

    private void jCheckBox_Stat_LocPrecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_LocPrecActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_LocPrecActionPerformed

    private void jCheckBox_Stat_PSFWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_PSFWidthActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_PSFWidthActionPerformed

    private void jCheckBox_Stat_TotalPhotonVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_TotalPhotonVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_TotalPhotonVaryActionPerformed

    private void jCheckBox_Stat_LocPrecVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_LocPrecVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_LocPrecVaryActionPerformed

    private void jCheckBox_Stat_SNRVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_SNRVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_SNRVaryActionPerformed

    private void jCheckBox_Stat_LocDensityVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_LocDensityVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_LocDensityVaryActionPerformed

    private void jCheckBox_Stat_PSFWidthVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_PSFWidthVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_PSFWidthVaryActionPerformed

    private void jCheckBox_Stat_BackgroundVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_BackgroundVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_BackgroundVaryActionPerformed

    private void jCheckBox_Stat_SpaResolutionVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_SpaResolutionVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_SpaResolutionVaryActionPerformed

    private void jCheckBox_Stat_NyqResolutionVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_NyqResolutionVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_NyqResolutionVaryActionPerformed

    private void jCheckBox_Stat_DimensionFDVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_DimensionFDVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_DimensionFDVaryActionPerformed

    private void jCheckBox_Stat_LocDensityFDVaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_LocDensityFDVaryActionPerformed
        // TODO add your handling code here:
        UpdateStatInfImageDisplay();
    }//GEN-LAST:event_jCheckBox_Stat_LocDensityFDVaryActionPerformed

    private void jButton_DnsitySetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DnsitySetActionPerformed
        // TODO add your handling code here:
        
        LaserPowerPercentage += 5;
        
        if(LaserPowerPercentage<0)LaserPowerPercentage=0;
        if(LaserPowerPercentage>100)LaserPowerPercentage=100;
        
        jTextField_AcLaserPower.setText(Integer.toString(LaserPowerPercentage));
        
        QC_STORM_Plug.lm_SetActivationLaserPower(LaserPowerPercentage);
        
    }//GEN-LAST:event_jButton_DnsitySetActionPerformed

    private void jButton_DensityResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DensityResetActionPerformed
        // TODO add your handling code here:
        LaserPowerPercentage -= 1;
        
        if(LaserPowerPercentage<0)LaserPowerPercentage=0;
        if(LaserPowerPercentage>100)LaserPowerPercentage=100;
        
        jTextField_AcLaserPower.setText(Integer.toString(LaserPowerPercentage));

        QC_STORM_Plug.lm_SetActivationLaserPower(LaserPowerPercentage); 
    }//GEN-LAST:event_jButton_DensityResetActionPerformed

    private void jTextField_StructureSize2DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StructureSize2DActionPerformed
        // TODO add your handling code here:
        float StructureWidth = Float.parseFloat(jTextField_StructureSize2D.getText());

    }//GEN-LAST:event_jTextField_StructureSize2DActionPerformed

    private void jCheckBox_Stat_MultiFitEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_MultiFitEnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_Stat_MultiFitEnActionPerformed

    private void jComboBox_ZCorrParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_ZCorrParaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_ZCorrParaActionPerformed

    private void jButton_3DCalibAcqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_3DCalibAcqActionPerformed
        // TODO add your handling code here:
        
        int iPlaneNum_Half = Integer.parseInt(jTextField_3DCalibPlaneNum_H.getText());
        
        Calibration3DAcq Calibration3DAcqer = new Calibration3DAcq(studio_, this, iPlaneNum_Half);
        
        Calibration3DAcqer.StartAcq();
        
    }//GEN-LAST:event_jButton_3DCalibAcqActionPerformed

    private void jCheckBox_Stat_DepthMapDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_Stat_DepthMapDispActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jCheckBox_Stat_DepthMapDispActionPerformed

    private void jTextField_AcLaserPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_AcLaserPowerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_AcLaserPowerActionPerformed

    private void jButton_DensityReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DensityReset1ActionPerformed
        // TODO add your handling code here:
        LaserPowerPercentage = 0;
        
        jTextField_AcLaserPower.setText(Integer.toString(LaserPowerPercentage));

        QC_STORM_Plug.lm_SetActivationLaserPower(LaserPowerPercentage);
    }//GEN-LAST:event_jButton_DensityReset1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QC_STORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QC_STORM_Configurator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_3DCalibAcq;
    private javax.swing.JButton jButton_BurstLive;
    private javax.swing.JButton jButton_DensityReset;
    private javax.swing.JButton jButton_DensityReset1;
    private javax.swing.JButton jButton_DnsitySet;
    private javax.swing.JButton jButton_LoadParaFile;
    private javax.swing.JButton jButton_LoadResultPath;
    private javax.swing.JButton jButton_MROIAcq;
    private javax.swing.JButton jButton_NewSRImage;
    private javax.swing.JButton jButton_TRXAdj1;
    private javax.swing.JButton jButton_TRXAdj2;
    private javax.swing.JButton jButton_TRYAdj1;
    private javax.swing.JButton jButton_TRYAdj2;
    private javax.swing.JButton jButton_ZAdjN;
    private javax.swing.JButton jButton_ZAdjP;
    private javax.swing.JCheckBox jCheckBox_DensityManualTargetEn;
    private javax.swing.JCheckBox jCheckBox_NoAcqIni;
    private javax.swing.JCheckBox jCheckBox_StageReturn;
    private javax.swing.JCheckBox jCheckBox_Stat_BackgroundVary;
    private javax.swing.JCheckBox jCheckBox_Stat_ConsecutiveFit;
    private javax.swing.JCheckBox jCheckBox_Stat_DepthMapDisp;
    private javax.swing.JCheckBox jCheckBox_Stat_DimensionFDVary;
    private javax.swing.JCheckBox jCheckBox_Stat_LocDensityFDVary;
    private javax.swing.JCheckBox jCheckBox_Stat_LocDensityVary;
    private javax.swing.JCheckBox jCheckBox_Stat_LocPrec;
    private javax.swing.JCheckBox jCheckBox_Stat_LocPrecVary;
    private javax.swing.JCheckBox jCheckBox_Stat_MultiFitEn;
    private javax.swing.JCheckBox jCheckBox_Stat_NyqResolutionVary;
    private javax.swing.JCheckBox jCheckBox_Stat_OntimeVary;
    private javax.swing.JCheckBox jCheckBox_Stat_PSFWidth;
    private javax.swing.JCheckBox jCheckBox_Stat_PSFWidthVary;
    private javax.swing.JCheckBox jCheckBox_Stat_SNR;
    private javax.swing.JCheckBox jCheckBox_Stat_SNRVary;
    private javax.swing.JCheckBox jCheckBox_Stat_SaveRawImage;
    private javax.swing.JCheckBox jCheckBox_Stat_SpaResolutionEn;
    private javax.swing.JCheckBox jCheckBox_Stat_SpaResolutionVary;
    private javax.swing.JCheckBox jCheckBox_Stat_TotalPhoton;
    private javax.swing.JCheckBox jCheckBox_Stat_TotalPhotonVary;
    private javax.swing.JCheckBox jCheckBox_Stat_WLEDisable;
    private javax.swing.JCheckBox jCheckBox_TrackDensity;
    private javax.swing.JCheckBox jCheckBox_TrackZPos;
    private javax.swing.JComboBox jComboBox_CtlBoxUART;
    private javax.swing.JComboBox jComboBox_LocType;
    private javax.swing.JComboBox jComboBox_RegionSize;
    private javax.swing.JComboBox jComboBox_TRStageUART;
    private javax.swing.JComboBox jComboBox_ZCorrPara;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel_ROMP;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField_3DCalibPlaneNum_H;
    private javax.swing.JTextField jTextField_AcLaserPower;
    private javax.swing.JTextField jTextField_BufferedImgNum;
    private javax.swing.JTextField jTextField_BurstCapturedNum;
    private javax.swing.JTextField jTextField_BurstFrameNum;
    private javax.swing.JTextField jTextField_ConsecFilterRadius;
    private javax.swing.JTextField jTextField_CtlBoxUARTBaudRate;
    private javax.swing.JTextField jTextField_DensityCtl_I;
    private javax.swing.JTextField jTextField_DensityCtl_P;
    private javax.swing.JTextField jTextField_FOVOverlapPercent;
    private javax.swing.JTextField jTextField_Kadc;
    private javax.swing.JTextField jTextField_ManualDensity;
    private javax.swing.JTextField jTextField_MaxLocDensity;
    private javax.swing.JTextField jTextField_MaxZDepth;
    private javax.swing.JTextField jTextField_MinZDepth;
    private javax.swing.JTextField jTextField_MultiROINum_X;
    private javax.swing.JTextField jTextField_MultiROINum_Y;
    private javax.swing.JTextField jTextField_MultiROI_WaitTime;
    private javax.swing.JTextField jTextField_Offset;
    private javax.swing.JTextField jTextField_ParaFile;
    private javax.swing.JTextField jTextField_QE;
    private javax.swing.JTextField jTextField_RawPixelSize;
    private javax.swing.JTextField jTextField_RenderPixelSize;
    private javax.swing.JTextField jTextField_ResolutionTh;
    private javax.swing.JTextField jTextField_ResultPath;
    private javax.swing.JTextField jTextField_SNR_th;
    private javax.swing.JTextField jTextField_StageMoveSteps_X;
    private javax.swing.JTextField jTextField_StageMoveSteps_Y;
    private javax.swing.JTextField jTextField_StructureSize2D;
    private javax.swing.JTextField jTextField_TRAdjNum_X;
    private javax.swing.JTextField jTextField_TRAdjNum_Y;
    private javax.swing.JTextField jTextField_TRStageUARTBaudRate;
    private javax.swing.JTextField jTextField_ZDepthCorrFactor;
    private javax.swing.JTextField jTextField_ZDriftCorrFrameNum;
    private javax.swing.JTextField jTextField_ZFocusMoveSteps;
    private javax.swing.JTextField jTextField_p0_XGY;
    private javax.swing.JTextField jTextField_p0_XLY;
    private javax.swing.JTextField jTextField_p1_XGY;
    private javax.swing.JTextField jTextField_p1_XLY;
    private javax.swing.JTextField jTextField_p2_XGY;
    private javax.swing.JTextField jTextField_p2_XLY;
    private javax.swing.JTextField jTextField_p3_XGY;
    private javax.swing.JTextField jTextField_p3_XLY;
    private javax.swing.JTextField jTextField_p4_XGY;
    private javax.swing.JTextField jTextField_p4_XLY;
    // End of variables declaration//GEN-END:variables

    @Override
    public void showGUI() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QC-STORM");
        
        setVisible(true);
    }

    @Override
    public void cleanup() {

        QC_STORM_Plug.lm_ReleaseLocResource();
    }

    @Override
    public PropertyMap getSettings() {
   
        PropertyMap.PropertyMapBuilder builder = studio_.data().getPropertyMapBuilder();

        GetLocalizationPara();
        
        return builder.build();
    }
    
    void ClearLiveData()
    {
        

        studio_.live().setLiveMode(false);

        studio_.data().notifyPipelineChanged();

        // avoid from live mode to burst acquisition
        QC_STORM_Plug.CloseAndWaitCurrentLocThread();

        
    }
    
    public LocalizationPara GetLocalizationPara()
    {
        LocPara.Kadc       = Float.parseFloat(jTextField_Kadc.getText());
        LocPara.Offset     = Float.parseFloat(jTextField_Offset.getText());
        LocPara.QE         = Float.parseFloat(jTextField_QE.getText());
        LocPara.RegionSize = Integer.parseInt((String)jComboBox_RegionSize.getSelectedItem());

        LocPara.RawImgPixelSize = Float.parseFloat(jTextField_RawPixelSize.getText());
        LocPara.RenderingPixelSize = Float.parseFloat(jTextField_RenderPixelSize.getText());
        LocPara.RenderingPixelZoom = LocPara.RawImgPixelSize/LocPara.RenderingPixelSize;
       
        LocPara.LocType=jComboBox_LocType.getSelectedIndex();
                
        LocPara.MultiEmitterFitEn = jCheckBox_Stat_MultiFitEn.isSelected()? 1 : 0;
        
        LocPara.WLEEn = jCheckBox_Stat_WLEDisable.isSelected()? 0 : 1;

        LocPara.ConsecutiveFitEn = jCheckBox_Stat_ConsecutiveFit.isSelected()? 1 : 0;
        LocPara.ConsecFilterRadius = Float.parseFloat(jTextField_ConsecFilterRadius.getText());
        
        LocPara.MinZDepth = Float.parseFloat(jTextField_MinZDepth.getText());
        LocPara.MaxZDepth = Float.parseFloat(jTextField_MaxZDepth.getText());

        LocPara.ZDepthCorrFactor = Float.parseFloat(jTextField_ZDepthCorrFactor.getText());
        
    	LocPara.p4_XGY = Float.parseFloat(jTextField_p4_XGY.getText());
    	LocPara.p3_XGY = Float.parseFloat(jTextField_p3_XGY.getText());
    	LocPara.p2_XGY = Float.parseFloat(jTextField_p2_XGY.getText());
    	LocPara.p1_XGY = Float.parseFloat(jTextField_p1_XGY.getText());
    	LocPara.p0_XGY = Float.parseFloat(jTextField_p0_XGY.getText());

    	LocPara.p4_XLY = Float.parseFloat(jTextField_p4_XLY.getText());
    	LocPara.p3_XLY = Float.parseFloat(jTextField_p3_XLY.getText());
    	LocPara.p2_XLY = Float.parseFloat(jTextField_p2_XLY.getText());
    	LocPara.p1_XLY = Float.parseFloat(jTextField_p1_XLY.getText());
    	LocPara.p0_XLY = Float.parseFloat(jTextField_p0_XLY.getText());
                
        //
        LocPara.SNR_th = Float.parseFloat(jTextField_SNR_th.getText());
        
        // spatial resolution
        LocPara.StructureSize2D = Float.parseFloat(jTextField_StructureSize2D.getText());


        // statastic information display enable
        LocPara.StatDispSel = GetStasticalInfDispEn();
        LocPara.SpatialResolutionEn = jCheckBox_Stat_SpaResolutionEn.isSelected() ? 1 : 0;
        
        
        LocDensityPID.KP = Float.parseFloat(jTextField_DensityCtl_P.getText());
        LocDensityPID.KI = Float.parseFloat(jTextField_DensityCtl_I.getText());
        

        // save file path
        ResultsFilePath = jTextField_ResultPath.getText();  
        
        
        return LocPara;
    }
    
    void SendLocalizationPara()
    {
        GetLocalizationPara();
        
        
        QC_STORM_Plug.lm_SetLocPara(LocPara.Kadc,LocPara.Offset,LocPara.QE,LocPara.RegionSize,LocPara.LocType, LocPara.MultiEmitterFitEn, LocPara.WLEEn, LocPara.ConsecutiveFitEn, LocPara.ConsecFilterRadius, LocPara.RawImgPixelSize, LocPara.RenderingPixelZoom,LocPara.SNR_th);
        
        QC_STORM_Plug.lm_SetLocPara3D(LocPara.MinZDepth, LocPara.MaxZDepth, LocPara.ZDepthCorrFactor, LocPara.p4_XGY, LocPara.p3_XGY, LocPara.p2_XGY, LocPara.p1_XGY, LocPara.p0_XGY, LocPara.p4_XLY, LocPara.p3_XLY, LocPara.p2_XLY, LocPara.p1_XLY, LocPara.p0_XLY);
        

        QC_STORM_Plug.lm_SetSpatialResolutionInf(LocPara.StructureSize2D);
        
        int DispMapDisp = jCheckBox_Stat_DepthMapDisp.isSelected()?1:0;
        
        QC_STORM_Plug.lm_SetStatInfSelection(LocPara.StatDispSel, LocPara.SpatialResolutionEn, DispMapDisp);
        

        //
        CMMCore mmc = studio_.getCMMCore();
        
        int ImageWidthI = (int) mmc.getImageWidth();
        int ImageHighI = (int) mmc.getImageHeight();

        // set super resolution image size
        int SRImageWidthI = (int) (ImageWidthI*LocPara.RenderingPixelZoom);
        int SRImageHighI = (int) (ImageHighI*LocPara.RenderingPixelZoom);
        SRImageWidthI = (SRImageWidthI+3)/4*4;
        SRImageHighI = (SRImageHighI+3)/4*4;
        
        QC_STORM_Plug.lm_SetImagePara(ImageWidthI, ImageHighI, SRImageWidthI, SRImageHighI);
    

        SetFeedbackEnable(0);
        SetFeedbackEnable(1);
        SetFeedbackEnable(2);
        

    }
    
    public int GetStasticalInfDispEn()
    {
        int InfDispSel = 0;
        
        // histgram
        if(jCheckBox_Stat_TotalPhoton.isSelected()) 	 InfDispSel |= 0x01;
        if(jCheckBox_Stat_LocPrec.isSelected())     	 InfDispSel |= 0x01<<1;
        if(jCheckBox_Stat_SNR.isSelected())         	 InfDispSel |= 0x01<<2;
        if(jCheckBox_Stat_PSFWidth.isSelected())    	 InfDispSel |= 0x01<<3;
        // time variation
        if(jCheckBox_Stat_TotalPhotonVary.isSelected())  InfDispSel |= 0x01<<4;
        if(jCheckBox_Stat_LocPrecVary.isSelected())      InfDispSel |= 0x01<<5;
        if(jCheckBox_Stat_OntimeVary.isSelected())       InfDispSel |= 0x01<<6;
        if(jCheckBox_Stat_SNRVary.isSelected())          InfDispSel |= 0x01<<7;   

        if(jCheckBox_Stat_PSFWidthVary.isSelected())     InfDispSel |= 0x01<<8;
        if(jCheckBox_Stat_LocDensityVary.isSelected())    InfDispSel |= 0x01<<9;
        if(jCheckBox_Stat_BackgroundVary.isSelected())   InfDispSel |= 0x01<<10;   
        
        // spatial resolution
        if(jCheckBox_Stat_SpaResolutionVary.isSelected())InfDispSel |= 0x01<<11;  
        if(jCheckBox_Stat_NyqResolutionVary.isSelected())InfDispSel |= 0x01<<12;
        if(jCheckBox_Stat_DimensionFDVary.isSelected())InfDispSel |= 0x01<<13;    
        if(jCheckBox_Stat_LocDensityFDVary.isSelected())InfDispSel |= 0x01<<14;

        
        return InfDispSel;
    }
      

    public void LoadPropertyFile(String FilePath) throws FileNotFoundException, IOException
    {
        // get likely uart port
        int UartidI=QC_STORM_Plug.lm_GetFirstUARTId();
        if(UartidI<0)UartidI=0;
        if(UartidI>19)UartidI=19;
        jComboBox_CtlBoxUART.setSelectedIndex(UartidI);
        

        File Parafile = new File(FilePath);
        File Parafiledir = new File(Parafile.getParent());


        if (Parafiledir.exists())
        {    
        }else
        {
             Parafiledir.mkdirs();
        }

        if (Parafile.exists())
        {
            
        }else
        {
             Parafile.createNewFile();
        }
        

        // load property file
        
        Properties pps = new Properties();

        InputStream in = new FileInputStream(FilePath);
              
        pps.load(in);

        // with default value
        jTextField_Kadc.setText(pps.getProperty("Kadc", Float.toString(LocPara.Kadc)));
        jTextField_Offset.setText(pps.getProperty("Offset", Float.toString(LocPara.Offset)));
        jTextField_QE.setText(pps.getProperty("QE", Float.toString(LocPara.QE)));

        jComboBox_RegionSize.setSelectedItem(pps.getProperty("RegionSize", Integer.toString(LocPara.RegionSize)));

        jTextField_RawPixelSize.setText(pps.getProperty("RawPixelSize", Float.toString(LocPara.RawImgPixelSize)));
        jTextField_RenderPixelSize.setText(pps.getProperty("RenderingPixelSize", Float.toString(LocPara.RenderingPixelSize)));

        jComboBox_LocType.setSelectedIndex(Integer.parseInt(pps.getProperty("LocType", Integer.toString(LocPara.LocType))));
        
        jCheckBox_Stat_MultiFitEn.setSelected(Boolean.parseBoolean(pps.getProperty("MultiEmitterFitEn", "true")));
        
        jCheckBox_Stat_WLEDisable.setSelected(!Boolean.parseBoolean(pps.getProperty("WLEEn", "true")));

        
        jCheckBox_Stat_ConsecutiveFit.setSelected(Boolean.parseBoolean(pps.getProperty("ConsecutiveFitEnable", "false")));
        jTextField_ConsecFilterRadius.setText(pps.getProperty("ConsecFilterRadius", Float.toString(LocPara.ConsecFilterRadius)));
        
  
        jTextField_MinZDepth.setText(pps.getProperty("MinZDepth", Float.toString(LocPara.MinZDepth)));
        jTextField_MaxZDepth.setText(pps.getProperty("MaxZDepth", Float.toString(LocPara.MaxZDepth)));
        jTextField_ZDepthCorrFactor.setText(pps.getProperty("ZDepthCorrFactor", Float.toString(LocPara.ZDepthCorrFactor)));
        
        
		jTextField_p4_XGY.setText(pps.getProperty("p4_XGY", Float.toString(LocPara.p4_XGY)));
		jTextField_p3_XGY.setText(pps.getProperty("p3_XGY", Float.toString(LocPara.p3_XGY)));
		jTextField_p2_XGY.setText(pps.getProperty("p2_XGY", Float.toString(LocPara.p2_XGY)));
		jTextField_p1_XGY.setText(pps.getProperty("p1_XGY", Float.toString(LocPara.p1_XGY)));
		jTextField_p0_XGY.setText(pps.getProperty("p0_XGY", Float.toString(LocPara.p0_XGY)));

		jTextField_p4_XLY.setText(pps.getProperty("p4_XLY", Float.toString(LocPara.p4_XLY)));
		jTextField_p3_XLY.setText(pps.getProperty("p3_XLY", Float.toString(LocPara.p3_XLY)));
		jTextField_p2_XLY.setText(pps.getProperty("p2_XLY", Float.toString(LocPara.p2_XLY)));
		jTextField_p1_XLY.setText(pps.getProperty("p1_XLY", Float.toString(LocPara.p1_XLY)));
		jTextField_p0_XLY.setText(pps.getProperty("p0_XLY", Float.toString(LocPara.p0_XLY)));

        
        //
        jTextField_SNR_th.setText(pps.getProperty("SNR_thF", Float.toString(LocPara.SNR_th)));
        jTextField_StructureSize2D.setText(pps.getProperty("StructureSize2D", Float.toString(LocPara.StructureSize2D)));
        
        // statastic information display enable

        jCheckBox_Stat_TotalPhoton.setSelected(Boolean.parseBoolean(pps.getProperty("TPhotonEnable",Boolean.toString(false))));
        jCheckBox_Stat_LocPrec.setSelected(Boolean.parseBoolean(pps.getProperty("LocPrecEnable", Boolean.toString(false))));
        jCheckBox_Stat_SNR.setSelected(Boolean.parseBoolean(pps.getProperty("SNREnable", Boolean.toString(false))));
        jCheckBox_Stat_PSFWidth.setSelected(Boolean.parseBoolean(pps.getProperty("PSFEnable", Boolean.toString(false))));
        //
        jCheckBox_Stat_TotalPhotonVary.setSelected(Boolean.parseBoolean(pps.getProperty("TPhotonVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_LocPrecVary.setSelected(Boolean.parseBoolean(pps.getProperty("LocPrecVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_OntimeVary.setSelected(Boolean.parseBoolean(pps.getProperty("OntimeVariationEnable", Boolean.toString(false))));
        jCheckBox_Stat_SNRVary.setSelected(Boolean.parseBoolean(pps.getProperty("SNRVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_PSFWidthVary.setSelected(Boolean.parseBoolean(pps.getProperty("PSFWidthVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_LocDensityVary.setSelected(Boolean.parseBoolean(pps.getProperty("ActivationDensityVariationEnable", Boolean.toString(true))));
        jCheckBox_Stat_BackgroundVary.setSelected(Boolean.parseBoolean(pps.getProperty("BackgroundVariationEnable", Boolean.toString(false))));
        //
        jCheckBox_Stat_SpaResolutionVary.setSelected(Boolean.parseBoolean(pps.getProperty("SpaResolutionVaryEnable", Boolean.toString(false))));
        jCheckBox_Stat_NyqResolutionVary.setSelected(Boolean.parseBoolean(pps.getProperty("NyqResolutionVaryEnable", Boolean.toString(false))));
        
        jCheckBox_Stat_DimensionFDVary.setSelected(Boolean.parseBoolean(pps.getProperty("DimensionFDVaryEnable", Boolean.toString(false))));
        jCheckBox_Stat_LocDensityFDVary.setSelected(Boolean.parseBoolean(pps.getProperty("LocDensityFDVary", Boolean.toString(false))));
        
        
        jCheckBox_Stat_SpaResolutionEn.setSelected(Boolean.parseBoolean(pps.getProperty("SpaResolutionCalcEnable", Boolean.toString(false))));

        // feedbacks
        
        jTextField_MaxLocDensity.setText(pps.getProperty("MaxAcqDensity", Float.toString(1.5f)));
        jTextField_ManualDensity.setText(pps.getProperty("ManualDensityTarget", Float.toString(1.2f)));
        jTextField_DensityCtl_P.setText(pps.getProperty("Density_PID_P", Float.toString(10.0f)));
        jTextField_DensityCtl_I.setText(pps.getProperty("Density_PID_I", Float.toString(1.0f)));

        
        jCheckBox_DensityManualTargetEn.setSelected(Boolean.parseBoolean(pps.getProperty("DensityManualTargetEn",Boolean.toString(true))));

        jCheckBox_TrackDensity.setSelected(Boolean.parseBoolean(pps.getProperty("DensityFeedbackEn",Boolean.toString(true))));
        jCheckBox_TrackZPos.setSelected(Boolean.parseBoolean(pps.getProperty("ZDriftCorrEn",Boolean.toString(true))));
        
        
        jTextField_ZFocusMoveSteps.setText(pps.getProperty("ZMoveSteps", Integer.toString(3)));
        jTextField_ZDriftCorrFrameNum.setText(pps.getProperty("ZDriftCorrFrameNum", Integer.toString(500)));

        jTextField_BurstFrameNum.setText(pps.getProperty("BurstAcqFrameNum", Integer.toString(20000)));
        jTextField_ResolutionTh.setText(pps.getProperty("SpatialResolutionTh", Float.toString(0.0f)));
        
        // multi ROI acquisition
        jComboBox_TRStageUART.setSelectedIndex(Integer.parseInt(pps.getProperty("TRStagePort", Integer.toString(0))));
        
        jTextField_MultiROINum_X.setText(pps.getProperty("StageMoveROINum_X", Integer.toString(3)));
        jTextField_MultiROINum_Y.setText(pps.getProperty("StageMoveROINum_Y", Integer.toString(3)));
        jTextField_StageMoveSteps_X.setText(pps.getProperty("StageMoveSteps_X", Integer.toString(1000)));
        jTextField_StageMoveSteps_Y.setText(pps.getProperty("StageMoveSteps_Y", Integer.toString(1000)));

        
        
        jCheckBox_Stat_SaveRawImage.setSelected(Boolean.parseBoolean(pps.getProperty("SaveRawImage", Boolean.toString(true))));
        jComboBox_ZCorrPara.setSelectedIndex(Integer.parseInt(pps.getProperty("ZFeedbackPara", Integer.toString(0))));
        
        //
        ResultsFilePath=pps.getProperty("ResultsFilePath", ResultsFilePath);
        
        if(!IsSavePathValid(ResultsFilePath))
        {
            ResultsFilePath = QC_STORM_Parameters.SelectDisk();
        }
        
        jTextField_ResultPath.setText(ResultsFilePath);
        
        
    }

    public void SavePropertyFile(String filePath) throws FileNotFoundException, IOException
    {
        if(filePath==null)return;

        
        Properties pps = new Properties();
        OutputStream out = new FileOutputStream(filePath);

        pps.setProperty("Kadc", jTextField_Kadc.getText());
        pps.setProperty("Offset", jTextField_Offset.getText());
        pps.setProperty("QE", jTextField_QE.getText());

        pps.setProperty("RegionSize", (String)jComboBox_RegionSize.getSelectedItem());

        pps.setProperty("RawPixelSize", jTextField_RawPixelSize.getText());
        pps.setProperty("RenderingPixelSize", jTextField_RenderPixelSize.getText());

        pps.setProperty("LocType", Integer.toString(jComboBox_LocType.getSelectedIndex()));
                
        pps.setProperty("MultiEmitterFitEn", Boolean.toString(jCheckBox_Stat_MultiFitEn.isSelected()));
        
        pps.setProperty("WLEEn", Boolean.toString(LocPara.WLEEn!=0));
        pps.setProperty("ConsecutiveFitEnable", Boolean.toString(LocPara.ConsecutiveFitEn!=0));


        pps.setProperty("ConsecFilterRadius", jTextField_ConsecFilterRadius.getText());
        
        
        pps.setProperty("MinZDepth", jTextField_MinZDepth.getText());
        pps.setProperty("MaxZDepth", jTextField_MaxZDepth.getText());
        pps.setProperty("ZDepthCorrFactor", jTextField_ZDepthCorrFactor.getText());
        
        
        pps.setProperty("p4_XGY", jTextField_p4_XGY.getText());
        pps.setProperty("p3_XGY", jTextField_p3_XGY.getText());
        pps.setProperty("p2_XGY", jTextField_p2_XGY.getText());
        pps.setProperty("p1_XGY", jTextField_p1_XGY.getText());
        pps.setProperty("p0_XGY", jTextField_p0_XGY.getText());

        pps.setProperty("p4_XLY", jTextField_p4_XLY.getText());
        pps.setProperty("p3_XLY", jTextField_p3_XLY.getText());
        pps.setProperty("p2_XLY", jTextField_p2_XLY.getText());
        pps.setProperty("p1_XLY", jTextField_p1_XLY.getText());
        pps.setProperty("p0_XLY", jTextField_p0_XLY.getText());
     

        //
        pps.setProperty("SNR_thF", jTextField_SNR_th.getText());
        
        pps.setProperty("StructureSize2D", jTextField_StructureSize2D.getText());
        

        
        // statastic information display enable
        pps.setProperty("TPhotonEnable", Boolean.toString(jCheckBox_Stat_TotalPhoton.isSelected()));
        pps.setProperty("LocPrecEnable", Boolean.toString(jCheckBox_Stat_LocPrec.isSelected()));
        pps.setProperty("SNREnable", Boolean.toString(jCheckBox_Stat_SNR.isSelected()));
        pps.setProperty("PSFEnable", Boolean.toString(jCheckBox_Stat_PSFWidth.isSelected()));

        pps.setProperty("TPhotonVariationEnable", Boolean.toString(jCheckBox_Stat_TotalPhotonVary.isSelected()));
        pps.setProperty("LocPrecVariationEnable", Boolean.toString(jCheckBox_Stat_LocPrecVary.isSelected()));
        pps.setProperty("OntimeVariationEnable", Boolean.toString(jCheckBox_Stat_OntimeVary.isSelected()));
        pps.setProperty("SNRVariationEnable", Boolean.toString(jCheckBox_Stat_SNRVary.isSelected()));        
        pps.setProperty("PSFWidthVariationEnable", Boolean.toString(jCheckBox_Stat_PSFWidthVary.isSelected()));
        pps.setProperty("ActivationDensityVariationEnable", Boolean.toString(jCheckBox_Stat_LocDensityVary.isSelected()));
        pps.setProperty("BackgroundVariationEnable", Boolean.toString(jCheckBox_Stat_BackgroundVary.isSelected()));
        //
        pps.setProperty("SpaResolutionVaryEnable", Boolean.toString(jCheckBox_Stat_SpaResolutionVary.isSelected()));
        pps.setProperty("NyqResolutionVaryEnable", Boolean.toString(jCheckBox_Stat_NyqResolutionVary.isSelected()));        
                     
        pps.setProperty("DimensionFDVaryEnable", Boolean.toString(jCheckBox_Stat_DimensionFDVary.isSelected()));
        pps.setProperty("LocDensityFDVary", Boolean.toString(jCheckBox_Stat_LocDensityFDVary.isSelected()));        

        pps.setProperty("SpaResolutionCalcEnable", Boolean.toString(jCheckBox_Stat_SpaResolutionEn.isSelected()));        
             
        // feedbacks

        pps.setProperty("MaxAcqDensity", jTextField_MaxLocDensity.getText());
        pps.setProperty("ManualDensityTarget", jTextField_ManualDensity.getText());
        pps.setProperty("Density_PID_P", jTextField_DensityCtl_P.getText());
        pps.setProperty("Density_PID_I", jTextField_DensityCtl_I.getText());
        
               
        pps.setProperty("DensityManualTargetEn", Boolean.toString(jCheckBox_DensityManualTargetEn.isSelected()));
        pps.setProperty("DensityFeedbackEn", Boolean.toString(jCheckBox_TrackDensity.isSelected()));
        pps.setProperty("ZDriftCorrEn", Boolean.toString(jCheckBox_TrackZPos.isSelected()));


        
        pps.setProperty("ZMoveSteps", jTextField_ZFocusMoveSteps.getText());
        pps.setProperty("ZDriftCorrFrameNum", jTextField_ZDriftCorrFrameNum.getText());
        
        pps.setProperty("BurstAcqFrameNum", jTextField_BurstFrameNum.getText());
        pps.setProperty("SpatialResolutionTh", jTextField_ResolutionTh.getText());
               
                       
        // multi ROI acquisition       
        pps.setProperty("TRStagePort", Integer.toString(jComboBox_TRStageUART.getSelectedIndex()));
        
        pps.setProperty("StageMoveROINum_X", jTextField_MultiROINum_X.getText());
        pps.setProperty("StageMoveROINum_Y", jTextField_MultiROINum_Y.getText());
        pps.setProperty("StageMoveSteps_X", jTextField_StageMoveSteps_X.getText());
        pps.setProperty("StageMoveSteps_Y", jTextField_StageMoveSteps_Y.getText());
        
        
        pps.setProperty("SaveRawImage", Boolean.toString(jCheckBox_Stat_SaveRawImage.isSelected()));
        pps.setProperty("ZFeedbackPara", Integer.toString(jComboBox_ZCorrPara.getSelectedIndex()));
        

        //
        pps.setProperty("ResultsFilePath",ResultsFilePath);

        pps.store(out, "Localization para");

    }  
    
  
    int GetBurstAcqFrameNum()
    {
        return Integer.parseInt(jTextField_BurstFrameNum.getText());
    }
    
    float GetSpatialResolutionTh()
    {
        return Float.parseFloat(jTextField_ResolutionTh.getText());
    }

    int GetZDriftCorrFrameNum()
    {
        int FrameNum=Integer.parseInt(jTextField_ZDriftCorrFrameNum.getText());
        return FrameNum;
    }
    
    boolean IsZDriftCtlEn()
    {
        return jCheckBox_TrackZPos.isSelected();
    }
    
    float GetDensityCtlTh()
    {
        float DensityTh = 0.4f;
        if(jCheckBox_DensityManualTargetEn.isSelected())
        {
            Float.parseFloat(jTextField_ManualDensity.getText());
        }
        
        return DensityTh;
    }
    boolean IsDensityCtlEn()
    {
        return jCheckBox_TrackDensity.isSelected();
    }
    void SetFeedbackEnable(int CtlId)
    {

        int AcDensityCtlEnI=(jCheckBox_TrackDensity.isSelected()) ? 1 : 0;
        int ZDriftCtlEnI=(jCheckBox_TrackZPos.isSelected()) ? 1 : 0;
        
        if((AcDensityCtlEnI>0)||(ZDriftCtlEnI>0))
        {
            SetFeedbackDevicePort();
        }
        
        switch(CtlId)
        {
            case 0:
                // localization density
                
                QC_STORM_Plug.lm_SetFeedbackEnable(CtlId, AcDensityCtlEnI);  
                break;
            case 1:
                
                break;

        }        
        
        
        SetFeedbackPara(CtlId);
    }
    
    void SetFeedbackPara(int CtlId)
    {
        SetFeedbackManualTarget(CtlId);
        
        SetPIDCtlPara(CtlId);
    }
    
    void SetFeedbackDevicePort()
    {
        // localization density and z drift control
        // share the same UART port
        
        CtlBoxUART.IsEnableI = 1;
        CtlBoxUART.PortID = jComboBox_CtlBoxUART.getSelectedIndex();
        CtlBoxUART.DataRateI = Integer.parseInt(jTextField_CtlBoxUARTBaudRate.getText());
        
        QC_STORM_Plug.lm_SetFeedbackDevice(0, CtlBoxUART.PortID, CtlBoxUART.DataRateI, CtlBoxUART.IsEnableI);

    }    
    
    void SetPIDCtlPara(int IdI)
    {
        
        LocDensityPID.KP = Float.parseFloat(jTextField_DensityCtl_P.getText());
        LocDensityPID.KI = Float.parseFloat(jTextField_DensityCtl_I.getText());        
        

        switch(IdI)
        {
            case 0:
                // localization density
                QC_STORM_Plug.lm_SetFeedbackPIDParameters(IdI, LocDensityPID.KP, LocDensityPID.KI, 0.0f);  
                break;
            case 1:

                break;

        }
    }

    
    void SetFeedbackManualTarget(int IdI)
    {
        int DensityManualEnableI=(jCheckBox_DensityManualTargetEn.isSelected()) ? 1 : 0;
        float DensityMalualTargetF = Float.parseFloat(jTextField_ManualDensity.getText());
        

        
        switch(IdI)
        {
            case 0:
                QC_STORM_Plug.lm_SetFeedbackManualTarget(IdI, DensityMalualTargetF, DensityManualEnableI); 
                break;
            case 1:

                break;
            case 2:
                
                break;
        }        

    }
    
    public int GetZMoveSteps()
    {
        return Integer.parseInt(jTextField_ZFocusMoveSteps.getText());
    }
    
    public float GetMaxTolerableLocDensity()
    {
        return Float.parseFloat(jTextField_MaxLocDensity.getText());
    }
    public float GetLocDensityTarget()
    {
        return Float.parseFloat(jTextField_ManualDensity.getText());
    }
    
    public boolean IsHighDensityImaging()
    {
        return jCheckBox_Stat_MultiFitEn.isSelected();
    }
    
    public boolean IsRandomDensity()
    {
        // return jCheckBox_RandomDensity.isSelected();
        return false;
    }
    
    public void SetBufferedImgNum(int GPUBufferedNum, int MJRemainCount)
    {
        jTextField_BufferedImgNum.setText(Integer.toString(GPUBufferedNum) + ", "+Integer.toString(MJRemainCount));
        
    }

    public boolean IsNoAcqIni()
    {
        return jCheckBox_NoAcqIni.isSelected();
    }
        
    public String GetResultsSavePath()
    {
        return jTextField_ResultPath.getText();
    } 
    
    public boolean IsRawImageSave()
    {
        return jCheckBox_Stat_SaveRawImage.isSelected();
    }
    
    public String GetParaFileSavePath()
    {
        String ParaFilePath = QC_STORM_Parameters.SelectDisk();
        return ParaFilePath + LocParafileName;
    }
    
    public boolean IsSavePathValid(String iPath)
    {
        File f = new File(iPath);
        boolean Valid = f.exists();
        
        return Valid;
    }
    
    void SetTranslationStagePort()
    {
        // localization density and z drift control
        // share the same UART port
        
        TRStageUART.IsEnableI = 1;
        TRStageUART.PortID = jComboBox_TRStageUART.getSelectedIndex();
        TRStageUART.DataRateI = Integer.parseInt(jTextField_TRStageUARTBaudRate.getText());
        
        QC_STORM_Plug.lm_SetTranslationStage(TRStageUART.PortID, TRStageUART.DataRateI, TRStageUART.IsEnableI);
        
        
        // excitation laser control
        // does not need
    }    
    
    public void ResetBurstLiveBtn()
    {
        CurBurstLiveActive = false;
        
        jButton_BurstLive.setText("Burst live acq");
        jButton_BurstLive.setEnabled(true);
    }
    
     public void ResetMultiROIAcqBtn()
    {
        CurMultiROIAcqActive = false;
        CurBurstLiveActive = false;
        
        jButton_MROIAcq.setText("Multi ROI acq");
        jButton_MROIAcq.setEnabled(true);
        
        jButton_BurstLive.setEnabled(true);
        
    }
    
    public int GetMultiAcq_ROINum_X()
    {
       return Integer.parseInt(jTextField_MultiROINum_X.getText());
    }

    public int GetMultiAcq_ROINum_Y()
    {
        return Integer.parseInt(jTextField_MultiROINum_Y.getText());
    }   

    public int GetMultiAcq_StepsNum_X()
    {
        return Integer.parseInt(jTextField_StageMoveSteps_X.getText());
    }

    public int GetMultiAcq_StepsNum_Y()
    {
        return Integer.parseInt(jTextField_StageMoveSteps_Y.getText());
    }      
     
    public void UpdateBurstAcqFrameNum(int Num)
    {
        jTextField_BurstCapturedNum.setText(Integer.toString(Num));
    }
    
    public void UpdateStatInfImageDisplay()
    {
        LocPara.StatDispSel = GetStasticalInfDispEn();
        
        int DispMapDisp = jCheckBox_Stat_DepthMapDisp.isSelected()?1:0;
        
        
        
        QC_STORM_Plug.lm_SetStatInfSelection(LocPara.StatDispSel, LocPara.SpatialResolutionEn, DispMapDisp);  
    }
    
    public float GetMultiFovOverlapPercent()
    {
        return Float.parseFloat(jTextField_FOVOverlapPercent.getText());
    }
    
    public int ZCorrMode()
    {
        return jComboBox_ZCorrPara.getSelectedIndex();
    }
    
    public boolean IsBurstLiveActive()
    {
        return CurBurstLiveActive;
    }
    public boolean IsMultiROIAcqActive()
    {
        return CurMultiROIAcqActive;
    }  
     public boolean IsZDriftCorrActive()
    {
        return CurZDriftCorrActive;
    }
     
     void ResetFeedbackCtl()
     {
         SetFeedbackDevicePort();
         
         QC_STORM_Plug.lm_ResetFeedback();
     }
     
     public void ZStepsMoveNPlane(int PlaneNum)
     {
        SetFeedbackDevicePort();

        int SMMoveSteps = GetZMoveSteps();
        
        SMMoveSteps = SMMoveSteps*PlaneNum;
        
        QC_STORM_Plug.lm_ZDepthSMMove(SMMoveSteps);  //SMMoveSteps
     }
     
     public void SetCalibAcqEnable(boolean en)
     {
         jButton_3DCalibAcq.setEnabled(en);
     }
     
     public boolean IsStageReturn()
     {
         return jCheckBox_StageReturn.isSelected();
     }
     
     public int GetMultiAcqWaitTime()
     {
         return Integer.parseInt(jTextField_MultiROI_WaitTime.getText());
     }
     
     public boolean SpatialResolutionCalcEn()
     {
         return jCheckBox_Stat_SpaResolutionEn.isSelected();
     }

    
}
